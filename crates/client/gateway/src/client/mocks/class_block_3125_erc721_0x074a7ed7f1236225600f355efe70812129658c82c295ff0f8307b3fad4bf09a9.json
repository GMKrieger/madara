{
  "abi": [
    {
      "members": [
        {
          "name": "low",
          "offset": 0,
          "type": "felt"
        },
        {
          "name": "high",
          "offset": 1,
          "type": "felt"
        }
      ],
      "name": "Uint256",
      "size": 2,
      "type": "struct"
    },
    {
      "data": [
        {
          "name": "from_",
          "type": "felt"
        },
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "keys": [],
      "name": "Transfer",
      "type": "event"
    },
    {
      "data": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "approved",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "keys": [],
      "name": "Approval",
      "type": "event"
    },
    {
      "data": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "operator",
          "type": "felt"
        },
        {
          "name": "approved",
          "type": "felt"
        }
      ],
      "keys": [],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "felt"
        },
        {
          "name": "symbol",
          "type": "felt"
        },
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "name": "constructor",
      "outputs": [],
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "totalSupply",
          "type": "Uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "index",
          "type": "Uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "index",
          "type": "Uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "interfaceId",
          "type": "felt"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "success",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "name",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "symbol",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "Uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "approved",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "operator",
          "type": "felt"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "isApproved",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "tokenURI_len",
          "type": "felt"
        },
        {
          "name": "tokenURI",
          "type": "felt*"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "operator",
          "type": "felt"
        },
        {
          "name": "approved",
          "type": "felt"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "felt"
        },
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "felt"
        },
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        },
        {
          "name": "data_len",
          "type": "felt"
        },
        {
          "name": "data",
          "type": "felt*"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenURI_len",
          "type": "felt"
        },
        {
          "name": "tokenURI",
          "type": "felt*"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "to",
          "type": "felt"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "to_list_len",
          "type": "felt"
        },
        {
          "name": "to_list",
          "type": "felt*"
        }
      ],
      "name": "mintMulti",
      "outputs": [
        {
          "name": "token_ids_len",
          "type": "felt"
        },
        {
          "name": "token_ids",
          "type": "Uint256*"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "type": "function"
    }
  ],
  "entry_points_by_type": {
    "CONSTRUCTOR": [
      {
        "offset": "0xa74",
        "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194"
      }
    ],
    "EXTERNAL": [
      {
        "offset": "0xb94",
        "selector": "0x2962ba17806af798afa6eaf4aa8c93a9fb60a3e305045b6eea33435086cae9"
      },
      {
        "offset": "0xcb4",
        "selector": "0x3e8cfd4725c1e28fa4a6e3e468b4fcf75367166b850ac5f04e33ec843e82c1"
      },
      {
        "offset": "0xc68",
        "selector": "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20"
      },
      {
        "offset": "0xa9d",
        "selector": "0x80aa9fdbfaf9615e4afc7f5f722e265daca5ccc655360fa5ccacf9c267936d"
      },
      {
        "offset": "0xd3a",
        "selector": "0xa75cd8a36691b2e0e570a2325338dd514409bdba4934eca8e42ce88cb0283c"
      },
      {
        "offset": "0xbb8",
        "selector": "0xb180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e"
      },
      {
        "offset": "0xac3",
        "selector": "0x10a6a6f98a84ccc0dc2dccd6988c77cb625e25df66f9482b8fca3a82f50cf50"
      },
      {
        "offset": "0xc0f",
        "selector": "0x12a7823b0c6bee58f8c694888f32f862c6584caa8afa0242de046d298ba684d"
      },
      {
        "offset": "0xc89",
        "selector": "0x19d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444"
      },
      {
        "offset": "0xb51",
        "selector": "0x216b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4"
      },
      {
        "offset": "0xc2f",
        "selector": "0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c"
      },
      {
        "offset": "0xbdc",
        "selector": "0x21cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30"
      },
      {
        "offset": "0xd65",
        "selector": "0x283b6bc9dcf1c432a6983224abae519957e953d14e2d66d9d36206b86a15cce"
      },
      {
        "offset": "0xb12",
        "selector": "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd"
      },
      {
        "offset": "0xc4b",
        "selector": "0x2d4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a"
      },
      {
        "offset": "0xb71",
        "selector": "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e"
      },
      {
        "offset": "0xd05",
        "selector": "0x2f0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354"
      },
      {
        "offset": "0xaee",
        "selector": "0x34e45f1a39063678f3d4c888e6fa7fd9f96160b4bebf14bf5f54845ead7fb79"
      },
      {
        "offset": "0xb33",
        "selector": "0x361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60"
      },
      {
        "offset": "0xcd4",
        "selector": "0x3af14cf9125a7e603f469fb569173e11e14e3d05e809728bc019ab5bde8dfb1"
      }
    ],
    "L1_HANDLER": []
  },
  "program": {
    "attributes": [
      {
        "accessible_scopes": [
          "openzeppelin.security.safemath",
          "openzeppelin.security.safemath.uint256_checked_add"
        ],
        "end_pc": 429,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 34,
            "offset": 35
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 427,
        "value": "Safemath: addition overflow"
      },
      {
        "accessible_scopes": [
          "openzeppelin.security.safemath",
          "openzeppelin.security.safemath.uint256_checked_sub_le"
        ],
        "end_pc": 454,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 36,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 452,
        "value": "Safemath: subtraction overflow"
      },
      {
        "accessible_scopes": [
          "openzeppelin.introspection.ERC165",
          "openzeppelin.introspection.ERC165.ERC165_register_interface"
        ],
        "end_pc": 530,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 41,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 525,
        "value": "ERC165: invalid interface id"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_balanceOf"
        ],
        "end_pc": 1008,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 72,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1005,
        "value": "ERC721: balance query for the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_ownerOf"
        ],
        "end_pc": 1020,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 73,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1015,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_ownerOf"
        ],
        "end_pc": 1029,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 73,
            "offset": 74
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1027,
        "value": "ERC721: owner query for nonexistent token"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_getApproved"
        ],
        "end_pc": 1039,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 74,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1034,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_getApproved"
        ],
        "end_pc": 1048,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 75,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1046,
        "value": "ERC721: approved query for nonexistent token"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_tokenURI"
        ],
        "end_pc": 1073,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 78,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1071,
        "value": "ERC721_Metadata: URI query for nonexistent token"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_approve"
        ],
        "end_pc": 1086,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 79,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_mesage",
        "start_pc": 1081,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_approve"
        ],
        "end_pc": 1091,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 79,
            "offset": 12
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1089,
        "value": "ERC721: cannot approve from the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_approve"
        ],
        "end_pc": 1101,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 79,
            "offset": 82
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1098,
        "value": "ERC721: approval to current owner"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_approve"
        ],
        "end_pc": 1125,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 79,
            "offset": 155
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1123,
        "value": "ERC721: approve caller is not owner nor approved for all"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_setApprovalForAll"
        ],
        "end_pc": 1143,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 82,
            "offset": 6
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1140,
        "value": "ERC721: either the caller or operator is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_setApprovalForAll"
        ],
        "end_pc": 1147,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 82,
            "offset": 9
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1143,
        "value": "ERC721: approve to caller"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_setApprovalForAll"
        ],
        "end_pc": 1153,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 82,
            "offset": 14
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1147,
        "value": "ERC721: approved is not a Cairo boolean"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_transferFrom"
        ],
        "end_pc": 1179,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 83,
            "offset": 1
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1174,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_transferFrom"
        ],
        "end_pc": 1194,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 84,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1191,
        "value": "ERC721: either is not approved or the caller is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_safeTransferFrom"
        ],
        "end_pc": 1214,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 86,
            "offset": 1
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1209,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_safeTransferFrom"
        ],
        "end_pc": 1229,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 87,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1226,
        "value": "ERC721: either is not approved or the caller is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_mint"
        ],
        "end_pc": 1249,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 89,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1244,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_mint"
        ],
        "end_pc": 1252,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 89,
            "offset": 6
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1249,
        "value": "ERC721: cannot mint to the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_mint"
        ],
        "end_pc": 1261,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 90,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1259,
        "value": "ERC721: token already minted"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_burn"
        ],
        "end_pc": 1306,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 91,
            "offset": 1
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1301,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_only_token_owner"
        ],
        "end_pc": 1375,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 94,
            "offset": 99
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1374,
        "value": "ERC721: caller is not the token owner"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721_setTokenURI"
        ],
        "end_pc": 1393,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 96,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1391,
        "value": "ERC721_Metadata: set token URI for nonexistent token"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library._is_approved_or_owner"
        ],
        "end_pc": 1437,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 99,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1435,
        "value": "ERC721: token id does not exist"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library._transfer"
        ],
        "end_pc": 1522,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 102,
            "offset": 87
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1521,
        "value": "ERC721: transfer from incorrect owner"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library._transfer"
        ],
        "end_pc": 1525,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 102,
            "offset": 87
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1522,
        "value": "ERC721: cannot transfer to the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library._safe_transfer"
        ],
        "end_pc": 1604,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 106,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1602,
        "value": "ERC721: transfer to non ERC721Receiver implementer"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library._check_onERC721Received"
        ],
        "end_pc": 1635,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 108,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1633,
        "value": "ERC721: transfer to non ERC721Receiver implementer"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721_enumerable.library",
          "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex"
        ],
        "end_pc": 1964,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 127,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1962,
        "value": "ERC721_Enumerable: global index out of bounds"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721_enumerable.library",
          "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex"
        ],
        "end_pc": 1996,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 129,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1994,
        "value": "ERC721_Enumerable: owner index out of bounds"
      },
      {
        "accessible_scopes": [
          "openzeppelin.access.ownable",
          "openzeppelin.access.ownable.Ownable_only_owner"
        ],
        "end_pc": 2360,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 155,
            "offset": 29
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 2359,
        "value": "Ownable: caller is not the owner"
      },
      {
        "accessible_scopes": [
          "contracts.ERC721_Enumerable_AutoId.library",
          "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI"
        ],
        "end_pc": 2552,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 170,
            "offset": 87
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 2550,
        "value": "query for nonexistent token"
      }
    ],
    "builtins": [
      "pedersen",
      "range_check"
    ],
    "data": [
      "0x40780017fff7fff",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x480280027ffb8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480080007fff8000",
      "0x400080007ffd7fff",
      "0x482480017ffd8001",
      "0x1",
      "0x482480017ffd8001",
      "0x1",
      "0xa0680017fff7ffe",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
      "0x402a7ffc7ffd7fff",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x4",
      "0x400780017fff7ffd",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48297ffd80007ffc",
      "0x20680017fff7fff",
      "0x4",
      "0x402780017ffc7ffc",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffc7ffd",
      "0x482680017ffc8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x48297ffc80007ffd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x482680017ffd8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x3ffffffffffffffffffffffffffffff",
      "0x480280017ffc8000",
      "0x48307fff80007ffe",
      "0x400280027ffc7fff",
      "0x480280017ffc8000",
      "0x484480017fff8000",
      "0x100000000000000000000000000000000",
      "0x480280007ffc8000",
      "0x40317fff7ffe7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480280017ffc8000",
      "0x484480017fff8000",
      "0x100000000000000000000000000000000",
      "0x480280007ffc8000",
      "0x40317fff7ffe7ffd",
      "0x480280017ffc8000",
      "0x482480017fff8000",
      "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
      "0x20680017fff7fff",
      "0xb",
      "0x482680017ffc8000",
      "0x2",
      "0x480280007ffc8000",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
      "0x10780017fff7fff",
      "0x9",
      "0x482680017ffc8000",
      "0x2",
      "0x480280017ffc8000",
      "0x480680017fff8000",
      "0x800000000000010ffffffffffffffff",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc7",
      "0x480280017ffc8000",
      "0x480280007ffc8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x20780017fff8000",
      "0x4",
      "0x10780017fff7fff",
      "0xb",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc5",
      "0x40780017fff7fff",
      "0x21",
      "0x48127fde7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
      "0x40137ffe7fff8001",
      "0x40137fff7fff8002",
      "0x48127ffd7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
      "0x48317ffe80008001",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x480a80027fff8000",
      "0x48127ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa3",
      "0x208b7fff7fff7ffe",
      "0x48127ffc7fff8000",
      "0x480a80017fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9d",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb8",
      "0x40137ffe7fff8000",
      "0x40137fff7fff8001",
      "0x48127ffd7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb2",
      "0x48317ffe80008000",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x480a80017fff8000",
      "0x48127ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8d",
      "0x208b7fff7fff7ffe",
      "0x48127ffc7fff8000",
      "0x480a80007fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff87",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0x10",
      "0x480a7ffc7fff8000",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8d",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48127ffe7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff87",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0xc",
      "0x40780017fff7fff",
      "0xa",
      "0x480680017fff8000",
      "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
      "0x480a7ffc7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff78",
      "0x10780017fff7fff",
      "0x8",
      "0x40780017fff7fff",
      "0xb",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff70",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x43616c6c436f6e7472616374",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x7",
      "0x480280057ff98000",
      "0x480280067ff98000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x47657443616c6c657241646472657373",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x476574436f6e747261637441646472657373",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f7261676552656164",
      "0x400280007ffc7fff",
      "0x400380017ffc7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x480280027ffc8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f726167655772697465",
      "0x400280007ffb7fff",
      "0x400380017ffb7ffc",
      "0x400380027ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x456d69744576656e74",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x5",
      "0x208b7fff7fff7ffe",
      "0xa0680017fff8000",
      "0x8",
      "0x400380007ffc7ffd",
      "0x482680017ffc8000",
      "0x1",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0xa0680017fff8000",
      "0xc",
      "0x484680017ffd8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x482480017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x400280007ffc7fff",
      "0x482680017ffc8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x100000000000000000000000000000000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4a",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x48297ffc80007ffd",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x2",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x4",
      "0x404b800280028002",
      "0x404b800380038003",
      "0x482a7ffc7ffa8000",
      "0x4846800180028000",
      "0x100000000000000000000000000000000",
      "0x40327fff80007ffe",
      "0x482a7ffd7ffb8000",
      "0x482880027fff8000",
      "0x4846800180038000",
      "0x100000000000000000000000000000000",
      "0x40327fff80017ffe",
      "0x480a7ff97fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x480a80037fff8000",
      "0x208b7fff7fff7ffe",
      "0x48297ffd80007ffb",
      "0x20680017fff7fff",
      "0x9",
      "0x480a7ff97fff8000",
      "0x482680017ffa8000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x482680017ffb8000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
      "0x480680017fff8000",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48307ffd80007ffe",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0xffffffffffffffffffffffffffffffff",
      "0x480680017fff8000",
      "0xffffffffffffffffffffffffffffffff",
      "0x480a7ffb7fff8000",
      "0x48287ffc80007ffd",
      "0x48287ffd80007ffd",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbd",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x48297ffd80007ffb",
      "0x20680017fff7fff",
      "0x4",
      "0x10780017fff7fff",
      "0x6",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x48297ffc80007ffa",
      "0x20680017fff7fff",
      "0x4",
      "0x10780017fff7fff",
      "0x6",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff89",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff85",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
      "0x400680017fff7fff",
      "0x0",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x0",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff70",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6c",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff92",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffac",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x10f6bdc8f69644775581b157f06334cb94ae302da4f6d09656c9a31f092cff6",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2d",
      "0x480a7ffc7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecf",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff04",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefd",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffe00365a",
      "0x20680017fff7fff",
      "0x8",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0xffffffff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0e",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde4",
      "0x40137fff7fff8000",
      "0x4003800080007ff8",
      "0x4003800180007ff9",
      "0x4003800280007ffa",
      "0x4003800380007ffb",
      "0x4003800480007ffc",
      "0x400380007ff67ffc",
      "0x402780017ff68001",
      "0x1",
      "0x4826800180008000",
      "0x5",
      "0x40297ffc7fff8002",
      "0x4826800180008000",
      "0x5",
      "0x480a7ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffddb",
      "0x480a7ff57fff8000",
      "0x480a7ff77fff8000",
      "0x480680017fff8000",
      "0xfa119a8fafc6f1a02deb36fe5efbcc4929ef2021e50cf1cb6d1a780ccd009b",
      "0x4829800080008002",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9b",
      "0x482480017fff8000",
      "0x1",
      "0x40307ffe7ffd7fff",
      "0x48127ffc7fff8000",
      "0x480a80017fff8000",
      "0x480080007ffc8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbf",
      "0x40137fff7fff8000",
      "0x4003800080007ffd",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd",
      "0x4828800080007ffc",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe84",
      "0x482480017fff8000",
      "0x1",
      "0x40307ffe7ffd7fff",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480080007ffc8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda8",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda2",
      "0x40137fff7fff8001",
      "0x4003800080017ffa",
      "0x4003800180017ffb",
      "0x4003800280017ffc",
      "0x4003800380017ffd",
      "0x4826800180018000",
      "0x4",
      "0x480a7ff87fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8e",
      "0x480a7ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8d",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x134692b230b9e1ffa39098904722134159652b09c5bc41d88d6698779d228ff",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd87",
      "0x40137fff7fff8001",
      "0x4003800080017ffa",
      "0x4003800180017ffb",
      "0x4003800280017ffc",
      "0x4003800380017ffd",
      "0x4826800180018000",
      "0x4",
      "0x480a7ff87fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe73",
      "0x480a7ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd72",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x6ad9ed7b6318f1bcffefe19df9aeb40d22c36bed567e1925a5ccde0536edd",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6c",
      "0x40137fff7fff8001",
      "0x4003800080017ffb",
      "0x4003800180017ffc",
      "0x4003800280017ffd",
      "0x4826800180018000",
      "0x3",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe59",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x95af06f0df22ce6f2473474a23caff0e615d7b4a62992fbbe34100fc05b93e",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3a",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe34",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x3b7e2f2214f4c6dd624d4f7403d5b04b76520498e9bd1e3435c90ab0e42905c",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe1c",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe16",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x19eba13c2ffadbed69e7a3ff4399447db5f0f1deff605072b123c3d33e5e300",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1d",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1a",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbc",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf0",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde8",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x3bbfaec36427c06f699125e4eedffd9148420983ff94e5284a9087e22050b79",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcef",
      "0x480a7ffc7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd91",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc6",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc1",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb9",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb4",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x2618225f6ac4a00b9635ed0e036ea1db17cf353e7ad948e882dbbca50565fbd",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbb",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb8",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5a",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8e",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd86",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x350efce99c55a2fbf8c09cde498fd24d686f21a900621778cd59ed10f4ae843",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8d",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8a",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd2c",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd60",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd58",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x1c87484b935c893d53d087ca6e0d4d7bcf1a90e5f4118b67a2c3df896c16cd8",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc5f",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc5c",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcfe",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd32",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd2a",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee7",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff02",
      "0x480680017fff8000",
      "0x80ac58cd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe34",
      "0x480680017fff8000",
      "0x5b5e139f",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe30",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec9",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc2b",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff2c",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd2e",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef4",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc16",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1b",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x1c1",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3a",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff60",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x1a8",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7d",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcec",
      "0x480a7ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc9f",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd8",
      "0x48127ffc7fff8000",
      "0x480a7ff87fff8000",
      "0x48127ff57fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffead",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd3",
      "0x48307ffb80007fb5",
      "0x20680017fff7fff",
      "0xe",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x124",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x48127fb07fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff24",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb6",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x10f",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6c",
      "0x48487ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba4",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba5",
      "0x480680017fff8000",
      "0x1",
      "0x48287ffd80007fff",
      "0x480680017fff8000",
      "0x0",
      "0x40527ffe7ffd7fff",
      "0x48127ff37fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ff17fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0d",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x48127faf7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe00",
      "0x48127ffe7fff8000",
      "0x48127fe27fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8f",
      "0x480a7ff87fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc42",
      "0x40137fff7fff8000",
      "0x480a7ff77fff8000",
      "0x48127ffd7fff8000",
      "0x48127ff77fff8000",
      "0x480a80007fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xed",
      "0x48527fff80008000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb71",
      "0x48127ffa7fff8000",
      "0x48127ff87fff8000",
      "0x48127ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x139",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ff77fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6c",
      "0x480a7ff67fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc1f",
      "0x40137fff7fff8000",
      "0x480a7ff57fff8000",
      "0x48127ffd7fff8000",
      "0x48127ff77fff8000",
      "0x480a80007fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0xca",
      "0x48527fff80008000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4e",
      "0x48127ffa7fff8000",
      "0x48127ff87fff8000",
      "0x48127ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x15b",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc49",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb37",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xec",
      "0x400680017fff7fff",
      "0x0",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2f",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca6",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe35",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe00",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd4b",
      "0x48127fe27fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc10",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed9",
      "0x40137fff7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x51",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf4",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc82",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a80007fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdfa",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc4",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480a80007fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0f",
      "0x48127fe27fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd6",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb89",
      "0x48127ffe7fff8000",
      "0x480a7ff97fff8000",
      "0x48127ff77fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9c",
      "0x40127fff7fff7fa8",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbc2",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x68",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4b",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde6",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe74",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce7",
      "0x48127ffe7fff8000",
      "0x48127fe07fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x3c",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe56",
      "0x40137fff7fff8000",
      "0x48297ffb80008000",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe58",
      "0x48287ffb80007fff",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a80007fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5e",
      "0x482480017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1b",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe09",
      "0x400a7ffa7fff7fff",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa26",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7f",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd21",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbaf",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd27",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd10",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb87",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd16",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce1",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc2d",
      "0x48127ffe7fff8000",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff57fff8000",
      "0x480a7ff67fff8000",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb3",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x8",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9d7",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff57fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa95",
      "0x48127ffe7fff8000",
      "0x480a7ff77fff8000",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0x150b7a02",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf1",
      "0x482480017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x20680017fff7fff",
      "0x15",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ff97fff8000",
      "0x48127fe17fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbd",
      "0x400680017fff7fff",
      "0x150b7a02",
      "0x48127ffd7fff8000",
      "0x480a7ff67fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0xf10dbd44",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd3",
      "0x48127ffd7fff8000",
      "0x480a7ff67fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x23b36207c2a1683c0c2dab8e4b8de6c941553e901d7e6bcd5fa78f4c7712c70",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa6c",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa67",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa60",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa5b",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x26683375072a8de2c9c6bfc9279399e175b53df66d76f9fdcea22f29a9a03af",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff962",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff95f",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa01",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa35",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa30",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
      "0x480a7ff77fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa27",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa22",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x2be7ed2d2ecb900eba0ae7775b226229f5bf554c1030cb43f1508b7196fc30d",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff929",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff926",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c8",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9fc",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9f7",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
      "0x480a7ff77fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ee",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e9",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0x3fea1469e009a73526a7b856697c5a5c7ae89ddcca25eea0eb61197020e3869",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8f0",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ed",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ea",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff98c",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9bf",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ba",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
      "0x480a7ff67fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9b0",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ab",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x3a5bfd6b073cd62c3d70df1ee36f04380fe38666e21acf44cd1322ac29ddb20",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8b2",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8af",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff951",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff985",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff980",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
      "0x480a7ff77fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff977",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff972",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x780e9d63",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa82",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee9",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff98e",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x40137ffb7fff8000",
      "0x40137ffc7fff8001",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff99b",
      "0x400680017fff7fff",
      "0x1",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeff",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff96f",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc2f",
      "0x40137ffb7fff8000",
      "0x40137ffc7fff8001",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff97b",
      "0x400680017fff7fff",
      "0x1",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff53",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x4f",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xb7",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf9",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc0c",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xbc",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x53",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd18",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xab",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x8c",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc85",
      "0x208b7fff7fff7ffe",
      "0x480a7ff57fff8000",
      "0x480a7ff67fff8000",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x97",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x78",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc92",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4f",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe95",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x48127fb77fff8000",
      "0x48127fb77fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec8",
      "0x48127f727fff8000",
      "0x48127f727fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ef",
      "0x48127fe57fff8000",
      "0x48127fe57fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe49",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2d",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff923",
      "0x48127fb37fff8000",
      "0x48127fb37fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8e",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127faf7fff8000",
      "0x48127faf7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4e",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127f637fff8000",
      "0x48127f637fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe58",
      "0x48127f687fff8000",
      "0x48127f687fff8000",
      "0x48127fb27fff8000",
      "0x48127fb27fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe52",
      "0x48127f6d7fff8000",
      "0x48127f6d7fff8000",
      "0x48127f1f7fff8000",
      "0x48127f1f7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe85",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7d",
      "0x48127dff7fff8000",
      "0x48127dff7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ee",
      "0x48127fb37fff8000",
      "0x48127fb37fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdfe",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb54",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe97",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x48127fab7fff8000",
      "0x48127fab7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecb",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x6",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb38",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8bb",
      "0x40137ffe7fff8000",
      "0x40137fff7fff8001",
      "0x48127fb37fff8000",
      "0x48127fb37fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9b",
      "0x40137ffb7fff8002",
      "0x40137ffc7fff8003",
      "0x40137ffe7fff8004",
      "0x40137fff7fff8005",
      "0x48127ffd7fff8000",
      "0x480a80047fff8000",
      "0x480a80057fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8b7",
      "0x482480017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x20680017fff7fff",
      "0x1a",
      "0x480a80027fff8000",
      "0x480a80037fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe96",
      "0x480a7ffb7fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe53",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a80027fff8000",
      "0x480a80037fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe31",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a80047fff8000",
      "0x480a80057fff8000",
      "0x48127ff87fff8000",
      "0x48127ff87fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3d",
      "0x48127fad7fff8000",
      "0x48127fad7fff8000",
      "0x480a80047fff8000",
      "0x480a80057fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe71",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x2bd557f4ba80dfabefabe45e9b2dd35db1b9a78e96c72bc2b69b655ce47a930",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7d7",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7d1",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
      "0x48127ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7a9",
      "0x40127fff7fff7ff9",
      "0x48127ffe7fff8000",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x71ace86304dbb9221d03da14223aa6345bc38c6a015f2ff0252653e8941a53",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff79b",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff796",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff78f",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff78a",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x3701534e82b0f7c9acb3b22c9d318fe9736a65b969dd907543a36aef38ea300",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff772",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff76c",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x169ee0a358d67923445dfceed78e12935a2a218d7b2fcf80e80d95d68651f2a",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff673",
      "0x480a7ffc7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff715",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff74a",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff743",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x480a7ffb7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff91",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff76c",
      "0x40137ffd7fff8000",
      "0x40137ffe7fff8001",
      "0x400680017fff7fff",
      "0x0",
      "0x48127fe57fff8000",
      "0x48127fe57fff8000",
      "0x48127ffa7fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe02",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6b0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff620",
      "0x40137fff7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x63",
      "0x480a7ffc7fff8000",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa04",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff623",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7a",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff604",
      "0x48127ffa7fff8000",
      "0x48127ff87fff8000",
      "0x48127ff97fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ff87fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x13",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff75",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x1e",
      "0x208b7fff7fff7ffe",
      "0x48297ffc80007ffb",
      "0x20680017fff7fff",
      "0x8",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff76",
      "0x482a7ffb7ffd8000",
      "0x400080007fff7ffe",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x482680017ffb8000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
      "0x208b7fff7fff7ffe",
      "0x48297ffc80007ffb",
      "0x20680017fff7fff",
      "0x6",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482a7ffb7ffd8000",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480080007ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff69",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x482680017ffb8000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffb",
      "0x6",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480280007ffc8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff60",
      "0x400280007ffd7ffe",
      "0x400280017ffd7fff",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x482680017ffb8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x482680017ffc8000",
      "0x1",
      "0x482680017ffd8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff961",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd17",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd05",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x48127ff47fff8000",
      "0x48127ff27fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce5",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x48127ff47fff8000",
      "0x48127ff27fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd9",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
      "0x48127ff47fff8000",
      "0x48127ff27fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6f7",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8bb",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8a3",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff88a",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff37fff8000",
      "0x48127ff37fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff870",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff85f",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff851",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdfc",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x4003800080007ffb",
      "0x400380007ffd7ffb",
      "0x402780017ffd8001",
      "0x1",
      "0x4826800180008000",
      "0x1",
      "0x40297ffb7fff8002",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff401",
      "0x480a80017fff8000",
      "0x4829800080008002",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
      "0x40137ffb7fff8000",
      "0x40137ffc7fff8001",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff80e",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff82a",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9b",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x4",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x480280037ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff57fff8000",
      "0x480a7ff67fff8000",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb8e",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280047ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x5",
      "0x480280047ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x480280037ffd8000",
      "0x480280047ffd8000",
      "0x482680017ffd8000",
      "0x5",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8a3",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb37",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc66",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd39",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x482680017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc3e",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbf",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff47fff8000",
      "0x48127ff27fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc16",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb9",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x4003800080007ffb",
      "0x400380007ffd7ffb",
      "0x402780017ffd8001",
      "0x1",
      "0x4826800180008000",
      "0x1",
      "0x484680017ffb8000",
      "0x2",
      "0x40317fff7ffe8002",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x484680017ffb8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff2d6",
      "0x480a80017fff8000",
      "0x4829800080008002",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x482680017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
      "0x40137ffc7fff8000",
      "0x40137ffb7fff8001",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd4",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbde",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc3c",
      "0x208b7fff7fff7ffe"
    ],
    "debug_info": null,
    "hints": {
      "0": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.alloc",
            "starkware.cairo.common.alloc.alloc"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 0,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "104": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\nids.small_inputs = int(\n    a < range_check_builtin.bound and (b - a) < range_check_builtin.bound)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 11,
              "offset": 3
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_le_felt.a": 12,
              "starkware.cairo.common.math.assert_le_felt.b": 13,
              "starkware.cairo.common.math.assert_le_felt.small_inputs": 14
            }
          }
        }
      ],
      "12": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "vm_enter_scope({'n': ids.len})",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.memcpy.memcpy.len": 0
            }
          }
        }
      ],
      "142": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_lt_felt"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 12,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_lt_felt.a": 15,
              "starkware.cairo.common.math.assert_lt_felt.b": 16
            }
          }
        }
      ],
      "171": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 13,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 17,
              "starkware.starknet.common.storage.normalize_address.is_small": 18
            }
          }
        }
      ],
      "189": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 13,
              "offset": 2
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 17,
              "starkware.starknet.common.storage.normalize_address.is_250": 19
            }
          }
        }
      ],
      "20": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 5
            },
            "reference_ids": {
              "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
            }
          }
        }
      ],
      "216": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.call_contract"
          ],
          "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 14,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 20
            }
          }
        }
      ],
      "224": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_caller_address"
          ],
          "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 15,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 21
            }
          }
        }
      ],
      "23": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "vm_exit_scope()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 6
            },
            "reference_ids": {}
          }
        }
      ],
      "231": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_contract_address"
          ],
          "code": "syscall_handler.get_contract_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 16,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": 22
            }
          }
        }
      ],
      "239": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_read"
          ],
          "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 17,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 23
            }
          }
        }
      ],
      "24": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_not_zero"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 3,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_not_zero.value": 2
            }
          }
        }
      ],
      "248": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_write"
          ],
          "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 18,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 24
            }
          }
        }
      ],
      "258": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.emit_event"
          ],
          "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 19,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 25
            }
          }
        }
      ],
      "261": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math_cmp",
            "starkware.cairo.common.math_cmp.is_nn"
          ],
          "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 20,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math_cmp.is_nn.a": 26
            }
          }
        }
      ],
      "2687": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.constructor"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 182,
              "offset": 291
            },
            "reference_ids": {}
          }
        }
      ],
      "269": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math_cmp",
            "starkware.cairo.common.math_cmp.is_nn"
          ],
          "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 20,
              "offset": 1
            },
            "reference_ids": {
              "starkware.cairo.common.math_cmp.is_nn.a": 26
            }
          }
        }
      ],
      "2707": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.totalSupply_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 184,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2745": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.tokenByIndex_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 188,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2788": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.tokenOfOwnerByIndex_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 193,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2825": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.supportsInterface_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 198,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2858": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.name_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 202,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2888": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.symbol_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 205,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "29": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_not_equal"
          ],
          "code": "from starkware.cairo.lang.vm.relocatable import RelocatableValue\nboth_ints = isinstance(ids.a, int) and isinstance(ids.b, int)\nboth_relocatable = (\n    isinstance(ids.a, RelocatableValue) and isinstance(ids.b, RelocatableValue) and\n    ids.a.segment_index == ids.b.segment_index)\nassert both_ints or both_relocatable, \\\n    f'assert_not_equal failed: non-comparable values: {ids.a}, {ids.b}.'\nassert (ids.a - ids.b) % PRIME != 0, f'assert_not_equal failed: {ids.a} = {ids.b}.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 4,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_not_equal.a": 3,
              "starkware.cairo.common.math.assert_not_equal.b": 4
            }
          }
        }
      ],
      "2919": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.balanceOf_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 208,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2955": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.ownerOf_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 211,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2991": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.getApproved_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 215,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "302": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.uint256",
            "starkware.cairo.common.uint256.uint256_add"
          ],
          "code": "sum_low = ids.a.low + ids.b.low\nids.carry_low = 1 if sum_low >= ids.SHIFT else 0\nsum_high = ids.a.high + ids.b.high + ids.carry_low\nids.carry_high = 1 if sum_high >= ids.SHIFT else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 24,
              "offset": 4
            },
            "reference_ids": {
              "starkware.cairo.common.uint256.uint256_add.a": 27,
              "starkware.cairo.common.uint256.uint256_add.b": 28,
              "starkware.cairo.common.uint256.uint256_add.carry_high": 30,
              "starkware.cairo.common.uint256.uint256_add.carry_low": 29
            }
          }
        }
      ],
      "3027": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.isApprovedForAll_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 219,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3068": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.tokenURI_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 223,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3130": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.approve"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 231,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3157": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.setApprovalForAll"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 233,
              "offset": 129
            },
            "reference_ids": {}
          }
        }
      ],
      "3188": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.transferFrom"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 237,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3231": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.safeTransferFrom"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 241,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3262": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.burn"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 245,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3302": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.setTokenURI"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 249,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3323": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.mint_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 252,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3364": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.mintMulti_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 257,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "3438": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.setOwner"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 263,
              "offset": 107
            },
            "reference_ids": {}
          }
        }
      ],
      "35": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_nn"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 5,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_nn.a": 5
            }
          }
        }
      ],
      "60": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_250_bit"
          ],
          "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 9,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_250_bit.high": 8,
              "starkware.cairo.common.math.assert_250_bit.low": 7,
              "starkware.cairo.common.math.assert_250_bit.value": 6
            }
          }
        }
      ],
      "73": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.split_felt"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 10,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.split_felt.high": 11,
              "starkware.cairo.common.math.split_felt.low": 10,
              "starkware.cairo.common.math.split_felt.value": 9
            }
          }
        }
      ]
    },
    "identifiers": {
      "__main__.ERC165_supports_interface": {
        "destination": "openzeppelin.introspection.ERC165.ERC165_supports_interface",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_AutoId_mint": {
        "destination": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_AutoId_mint_multi": {
        "destination": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint_multi",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_AutoId_set_tokenURI": {
        "destination": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_set_tokenURI",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_AutoId_tokenURI": {
        "destination": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_burn": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_burn",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_initializer": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_initializer",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_mint": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_safeTransferFrom": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_safeTransferFrom",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_tokenByIndex": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_tokenOfOwnerByIndex": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_totalSupply": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_totalSupply",
        "type": "alias"
      },
      "__main__.ERC721_Enumerable_transferFrom": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_transferFrom",
        "type": "alias"
      },
      "__main__.ERC721_approve": {
        "destination": "openzeppelin.token.erc721.library.ERC721_approve",
        "type": "alias"
      },
      "__main__.ERC721_balanceOf": {
        "destination": "openzeppelin.token.erc721.library.ERC721_balanceOf",
        "type": "alias"
      },
      "__main__.ERC721_getApproved": {
        "destination": "openzeppelin.token.erc721.library.ERC721_getApproved",
        "type": "alias"
      },
      "__main__.ERC721_initializer": {
        "destination": "openzeppelin.token.erc721.library.ERC721_initializer",
        "type": "alias"
      },
      "__main__.ERC721_isApprovedForAll": {
        "destination": "openzeppelin.token.erc721.library.ERC721_isApprovedForAll",
        "type": "alias"
      },
      "__main__.ERC721_name": {
        "destination": "openzeppelin.token.erc721.library.ERC721_name",
        "type": "alias"
      },
      "__main__.ERC721_only_token_owner": {
        "destination": "openzeppelin.token.erc721.library.ERC721_only_token_owner",
        "type": "alias"
      },
      "__main__.ERC721_ownerOf": {
        "destination": "openzeppelin.token.erc721.library.ERC721_ownerOf",
        "type": "alias"
      },
      "__main__.ERC721_setApprovalForAll": {
        "destination": "openzeppelin.token.erc721.library.ERC721_setApprovalForAll",
        "type": "alias"
      },
      "__main__.ERC721_setTokenURI": {
        "destination": "openzeppelin.token.erc721.library.ERC721_setTokenURI",
        "type": "alias"
      },
      "__main__.ERC721_symbol": {
        "destination": "openzeppelin.token.erc721.library.ERC721_symbol",
        "type": "alias"
      },
      "__main__.ERC721_tokenURI": {
        "destination": "openzeppelin.token.erc721.library.ERC721_tokenURI",
        "type": "alias"
      },
      "__main__.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__.IERC20": {
        "destination": "openzeppelin.token.erc20.interfaces.IERC20.IERC20",
        "type": "alias"
      },
      "__main__.IERC721": {
        "destination": "openzeppelin.token.erc721.interfaces.IERC721.IERC721",
        "type": "alias"
      },
      "__main__.Ownable_initializer": {
        "destination": "openzeppelin.access.ownable.Ownable_initializer",
        "type": "alias"
      },
      "__main__.Ownable_only_owner": {
        "destination": "openzeppelin.access.ownable.Ownable_only_owner",
        "type": "alias"
      },
      "__main__.Ownable_transfer_ownership": {
        "destination": "openzeppelin.access.ownable.Ownable_transfer_ownership",
        "type": "alias"
      },
      "__main__.SignatureBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "type": "alias"
      },
      "__main__.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "__main__._mint": {
        "decorators": [],
        "pc": 3447,
        "type": "function"
      },
      "__main__._mint.Args": {
        "full_name": "__main__._mint.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__._mint.ImplicitArgs": {
        "full_name": "__main__._mint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._mint.Return": {
        "cairo_type": "(tokenId : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "__main__._mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.approve": {
        "decorators": [
          "external"
        ],
        "pc": 3110,
        "type": "function"
      },
      "__main__.approve.Args": {
        "full_name": "__main__.approve.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.approve.ImplicitArgs": {
        "full_name": "__main__.approve.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.approve.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "__main__.balanceOf": {
        "decorators": [
          "view"
        ],
        "pc": 2912,
        "type": "function"
      },
      "__main__.balanceOf.Args": {
        "full_name": "__main__.balanceOf.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__.balanceOf.ImplicitArgs": {
        "full_name": "__main__.balanceOf.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.balanceOf.Return": {
        "cairo_type": "(balance : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "__main__.balanceOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.burn": {
        "decorators": [
          "external"
        ],
        "pc": 3240,
        "type": "function"
      },
      "__main__.burn.Args": {
        "full_name": "__main__.burn.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.burn.ImplicitArgs": {
        "full_name": "__main__.burn.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.burn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.burn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.constructor": {
        "decorators": [
          "constructor"
        ],
        "pc": 2663,
        "type": "function"
      },
      "__main__.constructor.Args": {
        "full_name": "__main__.constructor.Args",
        "members": {
          "name": {
            "cairo_type": "felt",
            "offset": 0
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 2
          },
          "symbol": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.constructor.ImplicitArgs": {
        "full_name": "__main__.constructor.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.constructor.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.constructor.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.getApproved": {
        "decorators": [
          "view"
        ],
        "pc": 2983,
        "type": "function"
      },
      "__main__.getApproved.Args": {
        "full_name": "__main__.getApproved.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.getApproved.ImplicitArgs": {
        "full_name": "__main__.getApproved.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.getApproved.Return": {
        "cairo_type": "(approved : felt)",
        "type": "type_definition"
      },
      "__main__.getApproved.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "__main__.get_contract_address": {
        "destination": "starkware.starknet.common.syscalls.get_contract_address",
        "type": "alias"
      },
      "__main__.isApprovedForAll": {
        "decorators": [
          "view"
        ],
        "pc": 3019,
        "type": "function"
      },
      "__main__.isApprovedForAll.Args": {
        "full_name": "__main__.isApprovedForAll.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.isApprovedForAll.ImplicitArgs": {
        "full_name": "__main__.isApprovedForAll.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.isApprovedForAll.Return": {
        "cairo_type": "(isApproved : felt)",
        "type": "type_definition"
      },
      "__main__.isApprovedForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.mint": {
        "decorators": [
          "external"
        ],
        "pc": 3311,
        "type": "function"
      },
      "__main__.mint.Args": {
        "full_name": "__main__.mint.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__.mint.ImplicitArgs": {
        "full_name": "__main__.mint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.mint.Return": {
        "cairo_type": "(tokenId : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "__main__.mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.mintMulti": {
        "decorators": [
          "external"
        ],
        "pc": 3351,
        "type": "function"
      },
      "__main__.mintMulti.Args": {
        "full_name": "__main__.mintMulti.Args",
        "members": {
          "to_list": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "to_list_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.mintMulti.ImplicitArgs": {
        "full_name": "__main__.mintMulti.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.mintMulti.Return": {
        "cairo_type": "(token_ids_len : felt, token_ids : starkware.cairo.common.uint256.Uint256*)",
        "type": "type_definition"
      },
      "__main__.mintMulti.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.name": {
        "decorators": [
          "view"
        ],
        "pc": 2852,
        "type": "function"
      },
      "__main__.name.Args": {
        "full_name": "__main__.name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.name.ImplicitArgs": {
        "full_name": "__main__.name.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.name.Return": {
        "cairo_type": "(name : felt)",
        "type": "type_definition"
      },
      "__main__.name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.ownerOf": {
        "decorators": [
          "view"
        ],
        "pc": 2947,
        "type": "function"
      },
      "__main__.ownerOf.Args": {
        "full_name": "__main__.ownerOf.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.ownerOf.ImplicitArgs": {
        "full_name": "__main__.ownerOf.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.ownerOf.Return": {
        "cairo_type": "(owner : felt)",
        "type": "type_definition"
      },
      "__main__.ownerOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.safeTransferFrom": {
        "decorators": [
          "external"
        ],
        "pc": 3197,
        "type": "function"
      },
      "__main__.safeTransferFrom.Args": {
        "full_name": "__main__.safeTransferFrom.Args",
        "members": {
          "_from": {
            "cairo_type": "felt",
            "offset": 0
          },
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "__main__.safeTransferFrom.ImplicitArgs": {
        "full_name": "__main__.safeTransferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.safeTransferFrom.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.safeTransferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.setApprovalForAll": {
        "decorators": [
          "external"
        ],
        "pc": 3139,
        "type": "function"
      },
      "__main__.setApprovalForAll.Args": {
        "full_name": "__main__.setApprovalForAll.Args",
        "members": {
          "approved": {
            "cairo_type": "felt",
            "offset": 1
          },
          "operator": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.setApprovalForAll.ImplicitArgs": {
        "full_name": "__main__.setApprovalForAll.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.setApprovalForAll.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.setApprovalForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.setOwner": {
        "decorators": [
          "external"
        ],
        "pc": 3417,
        "type": "function"
      },
      "__main__.setOwner.Args": {
        "full_name": "__main__.setOwner.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__.setOwner.ImplicitArgs": {
        "full_name": "__main__.setOwner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.setOwner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.setOwner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.setTokenURI": {
        "decorators": [
          "external"
        ],
        "pc": 3271,
        "type": "function"
      },
      "__main__.setTokenURI.Args": {
        "full_name": "__main__.setTokenURI.Args",
        "members": {
          "tokenURI": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "tokenURI_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.setTokenURI.ImplicitArgs": {
        "full_name": "__main__.setTokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.setTokenURI.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.setTokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.supportsInterface": {
        "decorators": [
          "view"
        ],
        "pc": 2818,
        "type": "function"
      },
      "__main__.supportsInterface.Args": {
        "full_name": "__main__.supportsInterface.Args",
        "members": {
          "interfaceId": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__.supportsInterface.ImplicitArgs": {
        "full_name": "__main__.supportsInterface.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.supportsInterface.Return": {
        "cairo_type": "(success : felt)",
        "type": "type_definition"
      },
      "__main__.supportsInterface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.symbol": {
        "decorators": [
          "view"
        ],
        "pc": 2882,
        "type": "function"
      },
      "__main__.symbol.Args": {
        "full_name": "__main__.symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.symbol.ImplicitArgs": {
        "full_name": "__main__.symbol.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.symbol.Return": {
        "cairo_type": "(symbol : felt)",
        "type": "type_definition"
      },
      "__main__.symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.tokenByIndex": {
        "decorators": [
          "view"
        ],
        "pc": 2732,
        "type": "function"
      },
      "__main__.tokenByIndex.Args": {
        "full_name": "__main__.tokenByIndex.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.tokenByIndex.ImplicitArgs": {
        "full_name": "__main__.tokenByIndex.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.tokenByIndex.Return": {
        "cairo_type": "(tokenId : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "__main__.tokenByIndex.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.tokenOfOwnerByIndex": {
        "decorators": [
          "view"
        ],
        "pc": 2774,
        "type": "function"
      },
      "__main__.tokenOfOwnerByIndex.Args": {
        "full_name": "__main__.tokenOfOwnerByIndex.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.tokenOfOwnerByIndex.ImplicitArgs": {
        "full_name": "__main__.tokenOfOwnerByIndex.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.tokenOfOwnerByIndex.Return": {
        "cairo_type": "(tokenId : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "__main__.tokenOfOwnerByIndex.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.tokenURI": {
        "decorators": [
          "view"
        ],
        "pc": 3055,
        "type": "function"
      },
      "__main__.tokenURI.Args": {
        "full_name": "__main__.tokenURI.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.tokenURI.ImplicitArgs": {
        "full_name": "__main__.tokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.tokenURI.Return": {
        "cairo_type": "(tokenURI_len : felt, tokenURI : felt*)",
        "type": "type_definition"
      },
      "__main__.tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.totalSupply": {
        "decorators": [
          "view"
        ],
        "pc": 2696,
        "type": "function"
      },
      "__main__.totalSupply.Args": {
        "full_name": "__main__.totalSupply.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.totalSupply.ImplicitArgs": {
        "full_name": "__main__.totalSupply.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.totalSupply.Return": {
        "cairo_type": "(totalSupply : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "__main__.totalSupply.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.transferFrom": {
        "decorators": [
          "external"
        ],
        "pc": 3166,
        "type": "function"
      },
      "__main__.transferFrom.Args": {
        "full_name": "__main__.transferFrom.Args",
        "members": {
          "_from": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "__main__.transferFrom.ImplicitArgs": {
        "full_name": "__main__.transferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.transferFrom.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.transferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.approve": {
        "decorators": [
          "external"
        ],
        "pc": 3119,
        "type": "function"
      },
      "__wrappers__.approve.Args": {
        "full_name": "__wrappers__.approve.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.approve.ImplicitArgs": {
        "full_name": "__wrappers__.approve.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.approve.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.approve.__wrapped_func": {
        "destination": "__main__.approve",
        "type": "alias"
      },
      "__wrappers__.approve_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.balanceOf": {
        "decorators": [
          "view"
        ],
        "pc": 2929,
        "type": "function"
      },
      "__wrappers__.balanceOf.Args": {
        "full_name": "__wrappers__.balanceOf.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf.ImplicitArgs": {
        "full_name": "__wrappers__.balanceOf.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.balanceOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.balanceOf.__wrapped_func": {
        "destination": "__main__.balanceOf",
        "type": "alias"
      },
      "__wrappers__.balanceOf_encode_return": {
        "decorators": [],
        "pc": 2919,
        "type": "function"
      },
      "__wrappers__.balanceOf_encode_return.Args": {
        "full_name": "__wrappers__.balanceOf_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(balance : starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.balanceOf_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.balanceOf_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.balanceOf_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.balanceOf_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.burn": {
        "decorators": [
          "external"
        ],
        "pc": 3252,
        "type": "function"
      },
      "__wrappers__.burn.Args": {
        "full_name": "__wrappers__.burn.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.burn.ImplicitArgs": {
        "full_name": "__wrappers__.burn.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.burn.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.burn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.burn.__wrapped_func": {
        "destination": "__main__.burn",
        "type": "alias"
      },
      "__wrappers__.burn_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.constructor": {
        "decorators": [
          "constructor"
        ],
        "pc": 2676,
        "type": "function"
      },
      "__wrappers__.constructor.Args": {
        "full_name": "__wrappers__.constructor.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.constructor.ImplicitArgs": {
        "full_name": "__wrappers__.constructor.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.constructor.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.constructor.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.constructor.__wrapped_func": {
        "destination": "__main__.constructor",
        "type": "alias"
      },
      "__wrappers__.constructor_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.getApproved": {
        "decorators": [
          "view"
        ],
        "pc": 3000,
        "type": "function"
      },
      "__wrappers__.getApproved.Args": {
        "full_name": "__wrappers__.getApproved.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getApproved.ImplicitArgs": {
        "full_name": "__wrappers__.getApproved.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getApproved.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getApproved.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.getApproved.__wrapped_func": {
        "destination": "__main__.getApproved",
        "type": "alias"
      },
      "__wrappers__.getApproved_encode_return": {
        "decorators": [],
        "pc": 2991,
        "type": "function"
      },
      "__wrappers__.getApproved_encode_return.Args": {
        "full_name": "__wrappers__.getApproved_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(approved : felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.getApproved_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.getApproved_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getApproved_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getApproved_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.getApproved_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.isApprovedForAll": {
        "decorators": [
          "view"
        ],
        "pc": 3036,
        "type": "function"
      },
      "__wrappers__.isApprovedForAll.Args": {
        "full_name": "__wrappers__.isApprovedForAll.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.isApprovedForAll.ImplicitArgs": {
        "full_name": "__wrappers__.isApprovedForAll.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.isApprovedForAll.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.isApprovedForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.isApprovedForAll.__wrapped_func": {
        "destination": "__main__.isApprovedForAll",
        "type": "alias"
      },
      "__wrappers__.isApprovedForAll_encode_return": {
        "decorators": [],
        "pc": 3027,
        "type": "function"
      },
      "__wrappers__.isApprovedForAll_encode_return.Args": {
        "full_name": "__wrappers__.isApprovedForAll_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(isApproved : felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.isApprovedForAll_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.isApprovedForAll_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.isApprovedForAll_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.mint": {
        "decorators": [
          "external"
        ],
        "pc": 3333,
        "type": "function"
      },
      "__wrappers__.mint.Args": {
        "full_name": "__wrappers__.mint.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.mint.ImplicitArgs": {
        "full_name": "__wrappers__.mint.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.mint.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.mint.__wrapped_func": {
        "destination": "__main__.mint",
        "type": "alias"
      },
      "__wrappers__.mintMulti": {
        "decorators": [
          "external"
        ],
        "pc": 3386,
        "type": "function"
      },
      "__wrappers__.mintMulti.Args": {
        "full_name": "__wrappers__.mintMulti.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.mintMulti.ImplicitArgs": {
        "full_name": "__wrappers__.mintMulti.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.mintMulti.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.mintMulti.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "__wrappers__.mintMulti.__wrapped_func": {
        "destination": "__main__.mintMulti",
        "type": "alias"
      },
      "__wrappers__.mintMulti_encode_return": {
        "decorators": [],
        "pc": 3364,
        "type": "function"
      },
      "__wrappers__.mintMulti_encode_return.Args": {
        "full_name": "__wrappers__.mintMulti_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(token_ids_len : felt, token_ids : starkware.cairo.common.uint256.Uint256*)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.mintMulti_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.mintMulti_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.mintMulti_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.mintMulti_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 3
      },
      "__wrappers__.mintMulti_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.mint_encode_return": {
        "decorators": [],
        "pc": 3323,
        "type": "function"
      },
      "__wrappers__.mint_encode_return.Args": {
        "full_name": "__wrappers__.mint_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(tokenId : starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.mint_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.mint_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.mint_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.mint_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.mint_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.name": {
        "decorators": [
          "view"
        ],
        "pc": 2867,
        "type": "function"
      },
      "__wrappers__.name.Args": {
        "full_name": "__wrappers__.name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name.ImplicitArgs": {
        "full_name": "__wrappers__.name.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.name.__wrapped_func": {
        "destination": "__main__.name",
        "type": "alias"
      },
      "__wrappers__.name_encode_return": {
        "decorators": [],
        "pc": 2858,
        "type": "function"
      },
      "__wrappers__.name_encode_return.Args": {
        "full_name": "__wrappers__.name_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(name : felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.name_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.name_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.name_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.name_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.ownerOf": {
        "decorators": [
          "view"
        ],
        "pc": 2964,
        "type": "function"
      },
      "__wrappers__.ownerOf.Args": {
        "full_name": "__wrappers__.ownerOf.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.ownerOf.ImplicitArgs": {
        "full_name": "__wrappers__.ownerOf.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.ownerOf.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.ownerOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.ownerOf.__wrapped_func": {
        "destination": "__main__.ownerOf",
        "type": "alias"
      },
      "__wrappers__.ownerOf_encode_return": {
        "decorators": [],
        "pc": 2955,
        "type": "function"
      },
      "__wrappers__.ownerOf_encode_return.Args": {
        "full_name": "__wrappers__.ownerOf_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(owner : felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.ownerOf_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.ownerOf_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.ownerOf_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.ownerOf_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.ownerOf_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.safeTransferFrom": {
        "decorators": [
          "external"
        ],
        "pc": 3209,
        "type": "function"
      },
      "__wrappers__.safeTransferFrom.Args": {
        "full_name": "__wrappers__.safeTransferFrom.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.safeTransferFrom.ImplicitArgs": {
        "full_name": "__wrappers__.safeTransferFrom.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.safeTransferFrom.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.safeTransferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.safeTransferFrom.__wrapped_func": {
        "destination": "__main__.safeTransferFrom",
        "type": "alias"
      },
      "__wrappers__.safeTransferFrom_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.setApprovalForAll": {
        "decorators": [
          "external"
        ],
        "pc": 3147,
        "type": "function"
      },
      "__wrappers__.setApprovalForAll.Args": {
        "full_name": "__wrappers__.setApprovalForAll.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setApprovalForAll.ImplicitArgs": {
        "full_name": "__wrappers__.setApprovalForAll.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setApprovalForAll.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.setApprovalForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.setApprovalForAll.__wrapped_func": {
        "destination": "__main__.setApprovalForAll",
        "type": "alias"
      },
      "__wrappers__.setApprovalForAll_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.setOwner": {
        "decorators": [
          "external"
        ],
        "pc": 3429,
        "type": "function"
      },
      "__wrappers__.setOwner.Args": {
        "full_name": "__wrappers__.setOwner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setOwner.ImplicitArgs": {
        "full_name": "__wrappers__.setOwner.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setOwner.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.setOwner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.setOwner.__wrapped_func": {
        "destination": "__main__.setOwner",
        "type": "alias"
      },
      "__wrappers__.setOwner_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.setTokenURI": {
        "decorators": [
          "external"
        ],
        "pc": 3284,
        "type": "function"
      },
      "__wrappers__.setTokenURI.Args": {
        "full_name": "__wrappers__.setTokenURI.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setTokenURI.ImplicitArgs": {
        "full_name": "__wrappers__.setTokenURI.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setTokenURI.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.setTokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.setTokenURI.__wrapped_func": {
        "destination": "__main__.setTokenURI",
        "type": "alias"
      },
      "__wrappers__.setTokenURI_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.supportsInterface": {
        "decorators": [
          "view"
        ],
        "pc": 2834,
        "type": "function"
      },
      "__wrappers__.supportsInterface.Args": {
        "full_name": "__wrappers__.supportsInterface.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.supportsInterface.ImplicitArgs": {
        "full_name": "__wrappers__.supportsInterface.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.supportsInterface.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.supportsInterface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.supportsInterface.__wrapped_func": {
        "destination": "__main__.supportsInterface",
        "type": "alias"
      },
      "__wrappers__.supportsInterface_encode_return": {
        "decorators": [],
        "pc": 2825,
        "type": "function"
      },
      "__wrappers__.supportsInterface_encode_return.Args": {
        "full_name": "__wrappers__.supportsInterface_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(success : felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.supportsInterface_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.supportsInterface_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.supportsInterface_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.supportsInterface_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.supportsInterface_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.symbol": {
        "decorators": [
          "view"
        ],
        "pc": 2897,
        "type": "function"
      },
      "__wrappers__.symbol.Args": {
        "full_name": "__wrappers__.symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol.ImplicitArgs": {
        "full_name": "__wrappers__.symbol.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.symbol.__wrapped_func": {
        "destination": "__main__.symbol",
        "type": "alias"
      },
      "__wrappers__.symbol_encode_return": {
        "decorators": [],
        "pc": 2888,
        "type": "function"
      },
      "__wrappers__.symbol_encode_return.Args": {
        "full_name": "__wrappers__.symbol_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(symbol : felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.symbol_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.symbol_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.symbol_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.symbol_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.tokenByIndex": {
        "decorators": [
          "view"
        ],
        "pc": 2755,
        "type": "function"
      },
      "__wrappers__.tokenByIndex.Args": {
        "full_name": "__wrappers__.tokenByIndex.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenByIndex.ImplicitArgs": {
        "full_name": "__wrappers__.tokenByIndex.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenByIndex.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.tokenByIndex.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.tokenByIndex.__wrapped_func": {
        "destination": "__main__.tokenByIndex",
        "type": "alias"
      },
      "__wrappers__.tokenByIndex_encode_return": {
        "decorators": [],
        "pc": 2745,
        "type": "function"
      },
      "__wrappers__.tokenByIndex_encode_return.Args": {
        "full_name": "__wrappers__.tokenByIndex_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(tokenId : starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.tokenByIndex_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.tokenByIndex_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenByIndex_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.tokenByIndex_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.tokenByIndex_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.tokenOfOwnerByIndex": {
        "decorators": [
          "view"
        ],
        "pc": 2798,
        "type": "function"
      },
      "__wrappers__.tokenOfOwnerByIndex.Args": {
        "full_name": "__wrappers__.tokenOfOwnerByIndex.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenOfOwnerByIndex.ImplicitArgs": {
        "full_name": "__wrappers__.tokenOfOwnerByIndex.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenOfOwnerByIndex.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.tokenOfOwnerByIndex.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.tokenOfOwnerByIndex.__wrapped_func": {
        "destination": "__main__.tokenOfOwnerByIndex",
        "type": "alias"
      },
      "__wrappers__.tokenOfOwnerByIndex_encode_return": {
        "decorators": [],
        "pc": 2788,
        "type": "function"
      },
      "__wrappers__.tokenOfOwnerByIndex_encode_return.Args": {
        "full_name": "__wrappers__.tokenOfOwnerByIndex_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(tokenId : starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.tokenOfOwnerByIndex_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.tokenOfOwnerByIndex_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenOfOwnerByIndex_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.tokenOfOwnerByIndex_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.tokenOfOwnerByIndex_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.tokenURI": {
        "decorators": [
          "view"
        ],
        "pc": 3087,
        "type": "function"
      },
      "__wrappers__.tokenURI.Args": {
        "full_name": "__wrappers__.tokenURI.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenURI.ImplicitArgs": {
        "full_name": "__wrappers__.tokenURI.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenURI.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "__wrappers__.tokenURI.__wrapped_func": {
        "destination": "__main__.tokenURI",
        "type": "alias"
      },
      "__wrappers__.tokenURI_encode_return": {
        "decorators": [],
        "pc": 3068,
        "type": "function"
      },
      "__wrappers__.tokenURI_encode_return.Args": {
        "full_name": "__wrappers__.tokenURI_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(tokenURI_len : felt, tokenURI : felt*)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.tokenURI_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.tokenURI_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenURI_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.tokenURI_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 3
      },
      "__wrappers__.tokenURI_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.totalSupply": {
        "decorators": [
          "view"
        ],
        "pc": 2717,
        "type": "function"
      },
      "__wrappers__.totalSupply.Args": {
        "full_name": "__wrappers__.totalSupply.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.totalSupply.ImplicitArgs": {
        "full_name": "__wrappers__.totalSupply.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.totalSupply.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.totalSupply.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.totalSupply.__wrapped_func": {
        "destination": "__main__.totalSupply",
        "type": "alias"
      },
      "__wrappers__.totalSupply_encode_return": {
        "decorators": [],
        "pc": 2707,
        "type": "function"
      },
      "__wrappers__.totalSupply_encode_return.Args": {
        "full_name": "__wrappers__.totalSupply_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(totalSupply : starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.totalSupply_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.totalSupply_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.totalSupply_encode_return.Return": {
        "cairo_type": "(range_check_ptr : felt, data_len : felt, data : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.totalSupply_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.totalSupply_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.transferFrom": {
        "decorators": [
          "external"
        ],
        "pc": 3176,
        "type": "function"
      },
      "__wrappers__.transferFrom.Args": {
        "full_name": "__wrappers__.transferFrom.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferFrom.ImplicitArgs": {
        "full_name": "__wrappers__.transferFrom.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferFrom.Return": {
        "cairo_type": "(syscall_ptr : felt*, pedersen_ptr : starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr : felt, size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "__wrappers__.transferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.transferFrom.__wrapped_func": {
        "destination": "__main__.transferFrom",
        "type": "alias"
      },
      "__wrappers__.transferFrom_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter": {
        "type": "namespace"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.addr": {
        "decorators": [],
        "pc": 2374,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.addr.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.addr.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.read": {
        "decorators": [],
        "pc": 2379,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.read.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.read.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.read.Return": {
        "cairo_type": "(token_id : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.write": {
        "decorators": [],
        "pc": 2398,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.write.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.write.Args",
        "members": {
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.write.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_counter.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint": {
        "decorators": [],
        "pc": 2486,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint.Return": {
        "cairo_type": "(token_id : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint_multi": {
        "decorators": [],
        "pc": 2521,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint_multi.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint_multi.Args",
        "members": {
          "to_list": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "to_list_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint_multi.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint_multi.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint_multi.Return": {
        "cairo_type": "(token_ids_len : felt, token_ids : starkware.cairo.common.uint256.Uint256*)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_mint_multi.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_set_tokenURI": {
        "decorators": [],
        "pc": 2569,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_set_tokenURI.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_set_tokenURI.Args",
        "members": {
          "tokenURI": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "tokenURI_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_set_tokenURI.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_set_tokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_set_tokenURI.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_set_tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI": {
        "decorators": [],
        "pc": 2543,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI.Return": {
        "cairo_type": "(tokenURI_len : felt, tokenURI : felt*)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index": {
        "type": "namespace"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.addr": {
        "decorators": [],
        "pc": 2445,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.addr.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.addr.Args",
        "members": {
          "index": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.addr.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.read": {
        "decorators": [],
        "pc": 2459,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.read.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.read.Args",
        "members": {
          "index": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.read.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.read.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.write": {
        "decorators": [],
        "pc": 2473,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.write.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.write.Args",
        "members": {
          "index": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.write.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_by_index.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len": {
        "type": "namespace"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.addr": {
        "decorators": [],
        "pc": 2415,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.addr.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.addr.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.read": {
        "decorators": [],
        "pc": 2420,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.read.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.read.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.read.Return": {
        "cairo_type": "(len : felt)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.write": {
        "decorators": [],
        "pc": 2433,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.write.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.write.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_AutoId_token_uri_len.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_Enumerable_mint": {
        "destination": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.ERC721_ownerOf": {
        "destination": "openzeppelin.token.erc721.library.ERC721_ownerOf",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.SignatureBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library._get_tokenURI": {
        "decorators": [],
        "pc": 2585,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library._get_tokenURI.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library._get_tokenURI.Args",
        "members": {
          "index": {
            "cairo_type": "felt",
            "offset": 0
          },
          "len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenURI": {
            "cairo_type": "felt*",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library._get_tokenURI.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library._get_tokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library._get_tokenURI.Return": {
        "cairo_type": "(tokenURI_len : felt, tokenURI : felt*)",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library._get_tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library._mint_multi": {
        "decorators": [],
        "pc": 2637,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library._mint_multi.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library._mint_multi.Args",
        "members": {
          "to_list": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "to_list_len": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_ids": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256*",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library._mint_multi.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library._mint_multi.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library._mint_multi.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library._mint_multi.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library._set_tokenURI": {
        "decorators": [],
        "pc": 2612,
        "type": "function"
      },
      "contracts.ERC721_Enumerable_AutoId.library._set_tokenURI.Args": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library._set_tokenURI.Args",
        "members": {
          "index": {
            "cairo_type": "felt",
            "offset": 0
          },
          "len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenURI": {
            "cairo_type": "felt*",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library._set_tokenURI.ImplicitArgs": {
        "full_name": "contracts.ERC721_Enumerable_AutoId.library._set_tokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "contracts.ERC721_Enumerable_AutoId.library._set_tokenURI.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "contracts.ERC721_Enumerable_AutoId.library._set_tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "contracts.ERC721_Enumerable_AutoId.library.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.assert_le_felt": {
        "destination": "starkware.cairo.common.math.assert_le_felt",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.assert_lt_felt": {
        "destination": "starkware.cairo.common.math.assert_lt_felt",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.assert_not_equal": {
        "destination": "starkware.cairo.common.math.assert_not_equal",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.uint256_add": {
        "destination": "starkware.cairo.common.uint256.uint256_add",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.uint256_check": {
        "destination": "starkware.cairo.common.uint256.uint256_check",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.uint256_eq": {
        "destination": "starkware.cairo.common.uint256.uint256_eq",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.uint256_lt": {
        "destination": "starkware.cairo.common.uint256.uint256_lt",
        "type": "alias"
      },
      "contracts.ERC721_Enumerable_AutoId.library.uint256_sub": {
        "destination": "starkware.cairo.common.uint256.uint256_sub",
        "type": "alias"
      },
      "openzeppelin.access.ownable.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.access.ownable.Ownable_initializer": {
        "decorators": [],
        "pc": 2344,
        "type": "function"
      },
      "openzeppelin.access.ownable.Ownable_initializer.Args": {
        "full_name": "openzeppelin.access.ownable.Ownable_initializer.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_initializer.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.Ownable_initializer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_initializer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.Ownable_initializer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.Ownable_only_owner": {
        "decorators": [],
        "pc": 2351,
        "type": "function"
      },
      "openzeppelin.access.ownable.Ownable_only_owner.Args": {
        "full_name": "openzeppelin.access.ownable.Ownable_only_owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_only_owner.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.Ownable_only_owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_only_owner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.Ownable_only_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.Ownable_owner": {
        "type": "namespace"
      },
      "openzeppelin.access.ownable.Ownable_owner.Args": {
        "full_name": "openzeppelin.access.ownable.Ownable_owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_owner.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.access.ownable.Ownable_owner.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.Ownable_owner.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_owner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.Ownable_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.Ownable_owner.addr": {
        "decorators": [],
        "pc": 2314,
        "type": "function"
      },
      "openzeppelin.access.ownable.Ownable_owner.addr.Args": {
        "full_name": "openzeppelin.access.ownable.Ownable_owner.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_owner.addr.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.Ownable_owner.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_owner.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.Ownable_owner.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.Ownable_owner.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.access.ownable.Ownable_owner.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.access.ownable.Ownable_owner.read": {
        "decorators": [],
        "pc": 2319,
        "type": "function"
      },
      "openzeppelin.access.ownable.Ownable_owner.read.Args": {
        "full_name": "openzeppelin.access.ownable.Ownable_owner.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_owner.read.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.Ownable_owner.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_owner.read.Return": {
        "cairo_type": "(owner : felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.Ownable_owner.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.Ownable_owner.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.access.ownable.Ownable_owner.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.access.ownable.Ownable_owner.write": {
        "decorators": [],
        "pc": 2332,
        "type": "function"
      },
      "openzeppelin.access.ownable.Ownable_owner.write.Args": {
        "full_name": "openzeppelin.access.ownable.Ownable_owner.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_owner.write.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.Ownable_owner.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_owner.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.Ownable_owner.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.Ownable_transfer_ownership": {
        "decorators": [],
        "pc": 2364,
        "type": "function"
      },
      "openzeppelin.access.ownable.Ownable_transfer_ownership.Args": {
        "full_name": "openzeppelin.access.ownable.Ownable_transfer_ownership.Args",
        "members": {
          "new_owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_transfer_ownership.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.Ownable_transfer_ownership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.Ownable_transfer_ownership.Return": {
        "cairo_type": "(new_owner : felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.Ownable_transfer_ownership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.ERC165_register_interface": {
        "decorators": [],
        "pc": 525,
        "type": "function"
      },
      "openzeppelin.introspection.ERC165.ERC165_register_interface.Args": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_register_interface.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_register_interface.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_register_interface.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_register_interface.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.ERC165.ERC165_register_interface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces": {
        "type": "namespace"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.Args": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.addr": {
        "decorators": [],
        "pc": 467,
        "type": "function"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.addr.Args": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.addr.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.addr.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.read": {
        "decorators": [],
        "pc": 481,
        "type": "function"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.read.Args": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.read.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.read.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.read.Return": {
        "cairo_type": "(is_supported : felt)",
        "type": "type_definition"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.write": {
        "decorators": [],
        "pc": 495,
        "type": "function"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.write.Args": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.write.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.write.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.ERC165.ERC165_supported_interfaces.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.ERC165.ERC165_supports_interface": {
        "decorators": [],
        "pc": 508,
        "type": "function"
      },
      "openzeppelin.introspection.ERC165.ERC165_supports_interface.Args": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supports_interface.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supports_interface.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.ERC165.ERC165_supports_interface.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.introspection.ERC165.ERC165_supports_interface.Return": {
        "cairo_type": "(success : felt)",
        "type": "type_definition"
      },
      "openzeppelin.introspection.ERC165.ERC165_supports_interface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.ERC165.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.SignatureBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.TRUE": {
        "destination": "openzeppelin.utils.constants.TRUE",
        "type": "alias"
      },
      "openzeppelin.introspection.ERC165.assert_not_equal": {
        "destination": "starkware.cairo.common.math.assert_not_equal",
        "type": "alias"
      },
      "openzeppelin.introspection.IERC165.IERC165": {
        "type": "namespace"
      },
      "openzeppelin.introspection.IERC165.IERC165.Args": {
        "full_name": "openzeppelin.introspection.IERC165.IERC165.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.IERC165.IERC165.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.IERC165.IERC165.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.IERC165.IERC165.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.IERC165.IERC165.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.IERC165.IERC165.SUPPORTSINTERFACE_SELECTOR": {
        "type": "const",
        "value": 1184015894760294494673613438913361435336722154500302038630992932234692784845
      },
      "openzeppelin.introspection.IERC165.IERC165.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.introspection.IERC165.IERC165.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "openzeppelin.introspection.IERC165.IERC165.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "openzeppelin.introspection.IERC165.IERC165.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.introspection.IERC165.IERC165.supportsInterface": {
        "decorators": [],
        "pc": 576,
        "type": "function"
      },
      "openzeppelin.introspection.IERC165.IERC165.supportsInterface.Args": {
        "full_name": "openzeppelin.introspection.IERC165.IERC165.supportsInterface.Args",
        "members": {
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "interfaceId": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.introspection.IERC165.IERC165.supportsInterface.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.IERC165.IERC165.supportsInterface.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.introspection.IERC165.IERC165.supportsInterface.Return": {
        "cairo_type": "(success : felt)",
        "type": "type_definition"
      },
      "openzeppelin.introspection.IERC165.IERC165.supportsInterface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.security.safemath.FALSE": {
        "destination": "openzeppelin.utils.constants.FALSE",
        "type": "alias"
      },
      "openzeppelin.security.safemath.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.security.safemath.SignatureBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "type": "alias"
      },
      "openzeppelin.security.safemath.TRUE": {
        "destination": "openzeppelin.utils.constants.TRUE",
        "type": "alias"
      },
      "openzeppelin.security.safemath.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.security.safemath.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "openzeppelin.security.safemath.uint256_add": {
        "destination": "starkware.cairo.common.uint256.uint256_add",
        "type": "alias"
      },
      "openzeppelin.security.safemath.uint256_check": {
        "destination": "starkware.cairo.common.uint256.uint256_check",
        "type": "alias"
      },
      "openzeppelin.security.safemath.uint256_checked_add": {
        "decorators": [],
        "pc": 412,
        "type": "function"
      },
      "openzeppelin.security.safemath.uint256_checked_add.Args": {
        "full_name": "openzeppelin.security.safemath.uint256_checked_add.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.security.safemath.uint256_checked_add.ImplicitArgs": {
        "full_name": "openzeppelin.security.safemath.uint256_checked_add.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.security.safemath.uint256_checked_add.Return": {
        "cairo_type": "(c : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.security.safemath.uint256_checked_add.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.security.safemath.uint256_checked_sub_le": {
        "decorators": [],
        "pc": 435,
        "type": "function"
      },
      "openzeppelin.security.safemath.uint256_checked_sub_le.Args": {
        "full_name": "openzeppelin.security.safemath.uint256_checked_sub_le.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.security.safemath.uint256_checked_sub_le.ImplicitArgs": {
        "full_name": "openzeppelin.security.safemath.uint256_checked_sub_le.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.security.safemath.uint256_checked_sub_le.Return": {
        "cairo_type": "(c : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.security.safemath.uint256_checked_sub_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.security.safemath.uint256_eq": {
        "destination": "starkware.cairo.common.uint256.uint256_eq",
        "type": "alias"
      },
      "openzeppelin.security.safemath.uint256_le": {
        "destination": "starkware.cairo.common.uint256.uint256_le",
        "type": "alias"
      },
      "openzeppelin.security.safemath.uint256_lt": {
        "destination": "starkware.cairo.common.uint256.uint256_lt",
        "type": "alias"
      },
      "openzeppelin.security.safemath.uint256_mul": {
        "destination": "starkware.cairo.common.uint256.uint256_mul",
        "type": "alias"
      },
      "openzeppelin.security.safemath.uint256_sub": {
        "destination": "starkware.cairo.common.uint256.uint256_sub",
        "type": "alias"
      },
      "openzeppelin.security.safemath.uint256_unsigned_div_rem": {
        "destination": "starkware.cairo.common.uint256.uint256_unsigned_div_rem",
        "type": "alias"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20": {
        "type": "namespace"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.ALLOWANCE_SELECTOR": {
        "type": "const",
        "value": 863164345921111744606866654754108663958095967665259696902984674202985078753
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.APPROVE_SELECTOR": {
        "type": "const",
        "value": 949021990203918389843157787496164629863144228991510976554585288817234167820
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.Args": {
        "full_name": "openzeppelin.token.erc20.interfaces.IERC20.IERC20.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.BALANCEOF_SELECTOR": {
        "type": "const",
        "value": 1307730684388977109649524593492043083703013045633289330664425380824804018030
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.DECIMALS_SELECTOR": {
        "type": "const",
        "value": 134830404806214277570220174593674215737759987247891306080029841794115377321
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc20.interfaces.IERC20.IERC20.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.NAME_SELECTOR": {
        "type": "const",
        "value": 1528802474226268325865027367859591458315299653151958663884057507666229546336
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.SYMBOL_SELECTOR": {
        "type": "const",
        "value": 944713526212149105522785400348068751682982210605126537021911324578866405028
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.TOTALSUPPLY_SELECTOR": {
        "type": "const",
        "value": 227334030968744315992796982100494617316223563777432855541120004521101595501
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.TRANSFERFROM_SELECTOR": {
        "type": "const",
        "value": 116061167288211781254449158074459916871457383008289084697957612485591092000
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.TRANSFER_SELECTOR": {
        "type": "const",
        "value": 232670485425082704932579856502088130646006032362877466777181098476241604910
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.IERC20.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc20.interfaces.IERC20.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC165": {
        "destination": "openzeppelin.introspection.IERC165.IERC165",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.APPROVE_SELECTOR": {
        "type": "const",
        "value": 949021990203918389843157787496164629863144228991510976554585288817234167820
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.Args": {
        "full_name": "openzeppelin.token.erc721.interfaces.IERC721.IERC721.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.BALANCEOF_SELECTOR": {
        "type": "const",
        "value": 1307730684388977109649524593492043083703013045633289330664425380824804018030
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.GETAPPROVED_SELECTOR": {
        "type": "const",
        "value": 313621473760873935122783910304240840031223477451753145243382550859039628062
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.ISAPPROVEDFORALL_SELECTOR": {
        "type": "const",
        "value": 955640681311292084896022829531366384024621189567662336953606158378698906672
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.interfaces.IERC721.IERC721.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.OWNEROF_SELECTOR": {
        "type": "const",
        "value": 73122117822990066614852869276021392412342625629800410280609241172256672489
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.SAFETRANSFERFROM_SELECTOR": {
        "type": "const",
        "value": 730327702935662484951878015260342994925824754530470619774470754812327453764
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.SETAPPROVALFORALL_SELECTOR": {
        "type": "const",
        "value": 1280583940859288259579061247154630474140520431395903753515491282704959909530
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.TRANSFERFROM_SELECTOR": {
        "type": "const",
        "value": 116061167288211781254449158074459916871457383008289084697957612485591092000
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.IERC721.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.Args": {
        "full_name": "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.ONERC721RECEIVED_SELECTOR": {
        "type": "const",
        "value": 441833262846246486607087847804043886170335009155803575450536462761436446875
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.onERC721Received": {
        "decorators": [],
        "pc": 539,
        "type": "function"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.onERC721Received.Args": {
        "full_name": "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.onERC721Received.Args",
        "members": {
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "data": {
            "cairo_type": "felt*",
            "offset": 6
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 5
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 2
          },
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 3
          }
        },
        "size": 7,
        "type": "struct"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.onERC721Received.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.onERC721Received.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.onERC721Received.Return": {
        "cairo_type": "(selector : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver.onERC721Received.SIZEOF_LOCALS": {
        "type": "const",
        "value": 3
      },
      "openzeppelin.token.erc721.interfaces.IERC721_Receiver.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Approval": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.Approval.Args": {
        "full_name": "openzeppelin.token.erc721.library.Approval.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Approval.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.Approval.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Approval.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.Approval.SELECTOR": {
        "type": "const",
        "value": 544914742286571513055574265148471203182105283038408585630116262969508767999
      },
      "openzeppelin.token.erc721.library.Approval.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.Approval.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Approval.emit": {
        "decorators": [],
        "pc": 626,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.Approval.emit.Args": {
        "full_name": "openzeppelin.token.erc721.library.Approval.emit.Args",
        "members": {
          "approved": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Approval.emit.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.Approval.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Approval.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.Approval.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.token.erc721.library.Approval.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Approval.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.Args": {
        "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.SELECTOR": {
        "type": "const",
        "value": 11799366895331287683400559711902461446731448035283747365813974388970843869
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit": {
        "decorators": [],
        "pc": 653,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit.Args": {
        "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.emit.Args",
        "members": {
          "approved": {
            "cairo_type": "felt",
            "offset": 2
          },
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC165_register_interface": {
        "destination": "openzeppelin.introspection.ERC165.ERC165_register_interface",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_approve": {
        "decorators": [],
        "pc": 1081,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_approve.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_approve.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_approve.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_approve.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_approve.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_balanceOf": {
        "decorators": [],
        "pc": 1005,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_balanceOf.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balanceOf.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balanceOf.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balanceOf.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balanceOf.Return": {
        "cairo_type": "(balance : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balanceOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_balances": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr": {
        "decorators": [],
        "pc": 785,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.addr.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_balances.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read": {
        "decorators": [],
        "pc": 799,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.read.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read.Return": {
        "cairo_type": "(balance : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_balances.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write": {
        "decorators": [],
        "pc": 819,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.write.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_burn": {
        "decorators": [],
        "pc": 1299,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_burn.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_burn.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_burn.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_burn.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_burn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_burn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.token.erc721.library.ERC721_getApproved": {
        "decorators": [],
        "pc": 1034,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_getApproved.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_getApproved.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_getApproved.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_getApproved.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_getApproved.Return": {
        "cairo_type": "(approved : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_getApproved.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_initializer": {
        "decorators": [],
        "pc": 975,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_initializer.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_initializer.Args",
        "members": {
          "name": {
            "cairo_type": "felt",
            "offset": 0
          },
          "symbol": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_initializer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_initializer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_initializer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_initializer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_isApprovedForAll": {
        "decorators": [],
        "pc": 1056,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_isApprovedForAll.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_isApprovedForAll.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_isApprovedForAll.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_isApprovedForAll.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_isApprovedForAll.Return": {
        "cairo_type": "(is_approved : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_isApprovedForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_mint": {
        "decorators": [],
        "pc": 1244,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_mint.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_mint.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_mint.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_mint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_mint.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name": {
        "decorators": [],
        "pc": 993,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_name.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.Return": {
        "cairo_type": "(name : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name_": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name_.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name_.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name_.addr": {
        "decorators": [],
        "pc": 679,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name_.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name_.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name_.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.read": {
        "decorators": [],
        "pc": 684,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name_.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name_.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.read.Return": {
        "cairo_type": "(name : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name_.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.write": {
        "decorators": [],
        "pc": 697,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name_.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name_.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name_.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_only_token_owner": {
        "decorators": [],
        "pc": 1359,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_only_token_owner.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_only_token_owner.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_only_token_owner.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_only_token_owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_only_token_owner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_only_token_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr": {
        "decorators": [],
        "pc": 883,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read": {
        "decorators": [],
        "pc": 900,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write": {
        "decorators": [],
        "pc": 915,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_ownerOf": {
        "decorators": [],
        "pc": 1015,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_ownerOf.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_ownerOf.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_ownerOf.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_ownerOf.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_ownerOf.Return": {
        "cairo_type": "(owner : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_ownerOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_owners": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr": {
        "decorators": [],
        "pc": 739,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.addr.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_owners.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read": {
        "decorators": [],
        "pc": 756,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.read.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read.Return": {
        "cairo_type": "(owner : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_owners.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write": {
        "decorators": [],
        "pc": 771,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.write.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_safeTransferFrom": {
        "decorators": [],
        "pc": 1207,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_safeTransferFrom.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_safeTransferFrom.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_safeTransferFrom.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_safeTransferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_safeTransferFrom.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_safeTransferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.token.erc721.library.ERC721_setApprovalForAll": {
        "decorators": [],
        "pc": 1137,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_setApprovalForAll.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_setApprovalForAll.Args",
        "members": {
          "approved": {
            "cairo_type": "felt",
            "offset": 1
          },
          "operator": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_setApprovalForAll.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_setApprovalForAll.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_setApprovalForAll.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_setApprovalForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_setTokenURI": {
        "decorators": [],
        "pc": 1379,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_setTokenURI.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_setTokenURI.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "token_uri": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_setTokenURI.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_setTokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_setTokenURI.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_setTokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol": {
        "decorators": [],
        "pc": 999,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.Return": {
        "cairo_type": "(symbol : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol_.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol_.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.addr": {
        "decorators": [],
        "pc": 709,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol_.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol_.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.read": {
        "decorators": [],
        "pc": 714,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol_.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol_.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.read.Return": {
        "cairo_type": "(symbol : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.write": {
        "decorators": [],
        "pc": 727,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol_.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol_.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol_.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_tokenURI": {
        "decorators": [],
        "pc": 1064,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_tokenURI.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_tokenURI.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_tokenURI.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_tokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_tokenURI.Return": {
        "cairo_type": "(token_uri : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr": {
        "decorators": [],
        "pc": 837,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read": {
        "decorators": [],
        "pc": 854,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write": {
        "decorators": [],
        "pc": 869,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr": {
        "decorators": [],
        "pc": 929,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.addr.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read": {
        "decorators": [],
        "pc": 946,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.read.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read.Return": {
        "cairo_type": "(token_uri : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write": {
        "decorators": [],
        "pc": 961,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.write.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_transferFrom": {
        "decorators": [],
        "pc": 1172,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_transferFrom.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_transferFrom.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_transferFrom.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_transferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_transferFrom.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_transferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.token.erc721.library.FALSE": {
        "destination": "openzeppelin.utils.constants.FALSE",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.IERC165": {
        "destination": "openzeppelin.introspection.IERC165.IERC165",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.IERC721_Receiver": {
        "destination": "openzeppelin.token.erc721.interfaces.IERC721_Receiver.IERC721_Receiver",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.SignatureBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.TRUE": {
        "destination": "openzeppelin.utils.constants.TRUE",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Transfer": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.Transfer.Args": {
        "full_name": "openzeppelin.token.erc721.library.Transfer.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Transfer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.Transfer.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Transfer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.Transfer.SELECTOR": {
        "type": "const",
        "value": 271746229759260285552388728919865295615886751538523744128730118297934206697
      },
      "openzeppelin.token.erc721.library.Transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.Transfer.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Transfer.emit": {
        "decorators": [],
        "pc": 599,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.Transfer.emit.Args": {
        "full_name": "openzeppelin.token.erc721.library.Transfer.emit.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Transfer.emit.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.Transfer.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Transfer.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.Transfer.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.token.erc721.library.Transfer.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Transfer.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library._approve": {
        "decorators": [],
        "pc": 1402,
        "type": "function"
      },
      "openzeppelin.token.erc721.library._approve.Args": {
        "full_name": "openzeppelin.token.erc721.library._approve.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._approve.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library._approve.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._approve.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library._approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library._check_onERC721Received": {
        "decorators": [],
        "pc": 1608,
        "type": "function"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received.Args": {
        "full_name": "openzeppelin.token.erc721.library._check_onERC721Received.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library._check_onERC721Received.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received.Return": {
        "cairo_type": "(success : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library._exists": {
        "decorators": [],
        "pc": 1493,
        "type": "function"
      },
      "openzeppelin.token.erc721.library._exists.Args": {
        "full_name": "openzeppelin.token.erc721.library._exists.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._exists.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library._exists.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._exists.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library._exists.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library._is_approved_or_owner": {
        "decorators": [],
        "pc": 1426,
        "type": "function"
      },
      "openzeppelin.token.erc721.library._is_approved_or_owner.Args": {
        "full_name": "openzeppelin.token.erc721.library._is_approved_or_owner.Args",
        "members": {
          "spender": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._is_approved_or_owner.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library._is_approved_or_owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._is_approved_or_owner.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library._is_approved_or_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.token.erc721.library._safe_transfer": {
        "decorators": [],
        "pc": 1585,
        "type": "function"
      },
      "openzeppelin.token.erc721.library._safe_transfer.Args": {
        "full_name": "openzeppelin.token.erc721.library._safe_transfer.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._safe_transfer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library._safe_transfer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._safe_transfer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library._safe_transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library._transfer": {
        "decorators": [],
        "pc": 1514,
        "type": "function"
      },
      "openzeppelin.token.erc721.library._transfer.Args": {
        "full_name": "openzeppelin.token.erc721.library._transfer.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._transfer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library._transfer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._transfer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library._transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.assert_not_equal": {
        "destination": "starkware.cairo.common.math.assert_not_equal",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.uint256_check": {
        "destination": "starkware.cairo.common.uint256.uint256_check",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.uint256_checked_add": {
        "destination": "openzeppelin.security.safemath.uint256_checked_add",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.uint256_checked_sub_le": {
        "destination": "openzeppelin.security.safemath.uint256_checked_sub_le",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC165_register_interface": {
        "destination": "openzeppelin.introspection.ERC165.ERC165_register_interface",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.addr": {
        "decorators": [],
        "pc": 1694,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.addr.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.addr.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.read": {
        "decorators": [],
        "pc": 1711,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.read.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.read.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.read.Return": {
        "cairo_type": "(token_id : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.write": {
        "decorators": [],
        "pc": 1732,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.write.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.write.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.addr": {
        "decorators": [],
        "pc": 1751,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.addr.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.addr.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.read": {
        "decorators": [],
        "pc": 1768,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.read.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.read.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.read.Return": {
        "cairo_type": "(index : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.write": {
        "decorators": [],
        "pc": 1789,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.write.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.write.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_index.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.addr": {
        "decorators": [],
        "pc": 1653,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.addr.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.read": {
        "decorators": [],
        "pc": 1658,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.read.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.read.Return": {
        "cairo_type": "(res : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.write": {
        "decorators": [],
        "pc": 1677,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.write.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.write.Args",
        "members": {
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_all_tokens_len.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_burn": {
        "decorators": [],
        "pc": 2023,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_burn.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_burn.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_burn.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_burn.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_burn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_burn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_initializer": {
        "decorators": [],
        "pc": 1927,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_initializer.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_initializer.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_initializer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_initializer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_initializer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_initializer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint": {
        "decorators": [],
        "pc": 2005,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.addr": {
        "decorators": [],
        "pc": 1808,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.addr.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.addr.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.read": {
        "decorators": [],
        "pc": 1828,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.read.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.read.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.read.Return": {
        "cairo_type": "(token_id : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.write": {
        "decorators": [],
        "pc": 1850,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.write.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.write.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 3
          }
        },
        "size": 5,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.addr": {
        "decorators": [],
        "pc": 1870,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.addr.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.addr.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.addr.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.read": {
        "decorators": [],
        "pc": 1887,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.read.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.read.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.read.Return": {
        "cairo_type": "(index : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.write": {
        "decorators": [],
        "pc": 1908,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.write.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.write.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_owned_tokens_index.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_safeTransferFrom": {
        "decorators": [],
        "pc": 2067,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_safeTransferFrom.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_safeTransferFrom.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_safeTransferFrom.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_safeTransferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_safeTransferFrom.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_safeTransferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex": {
        "decorators": [],
        "pc": 1941,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex.Return": {
        "cairo_type": "(token_id : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenByIndex.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex": {
        "decorators": [],
        "pc": 1972,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex.Args",
        "members": {
          "index": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex.Return": {
        "cairo_type": "(token_id : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_tokenOfOwnerByIndex.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_totalSupply": {
        "decorators": [],
        "pc": 1935,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_totalSupply.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_totalSupply.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_totalSupply.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_totalSupply.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_totalSupply.Return": {
        "cairo_type": "(totalSupply : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_totalSupply.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_transferFrom": {
        "decorators": [],
        "pc": 2047,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_transferFrom.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_transferFrom.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_transferFrom.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_transferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_transferFrom.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_Enumerable_transferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_balanceOf": {
        "destination": "openzeppelin.token.erc721.library.ERC721_balanceOf",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_burn": {
        "destination": "openzeppelin.token.erc721.library.ERC721_burn",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_mint": {
        "destination": "openzeppelin.token.erc721.library.ERC721_mint",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_ownerOf": {
        "destination": "openzeppelin.token.erc721.library.ERC721_ownerOf",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_safeTransferFrom": {
        "destination": "openzeppelin.token.erc721.library.ERC721_safeTransferFrom",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.ERC721_transferFrom": {
        "destination": "openzeppelin.token.erc721.library.ERC721_transferFrom",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.SignatureBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.TRUE": {
        "destination": "openzeppelin.utils.constants.TRUE",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_all_tokens_enumeration": {
        "decorators": [],
        "pc": 2089,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_all_tokens_enumeration.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library._add_token_to_all_tokens_enumeration.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_all_tokens_enumeration.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library._add_token_to_all_tokens_enumeration.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_all_tokens_enumeration.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_all_tokens_enumeration.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_owner_enumeration": {
        "decorators": [],
        "pc": 2198,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_owner_enumeration.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library._add_token_to_owner_enumeration.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_owner_enumeration.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library._add_token_to_owner_enumeration.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_owner_enumeration.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library._add_token_to_owner_enumeration.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_all_tokens_enumeration": {
        "decorators": [],
        "pc": 2123,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_all_tokens_enumeration.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library._remove_token_from_all_tokens_enumeration.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_all_tokens_enumeration.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library._remove_token_from_all_tokens_enumeration.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_all_tokens_enumeration.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_all_tokens_enumeration.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_owner_enumeration": {
        "decorators": [],
        "pc": 2224,
        "type": "function"
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_owner_enumeration.Args": {
        "full_name": "openzeppelin.token.erc721_enumerable.library._remove_token_from_owner_enumeration.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_owner_enumeration.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721_enumerable.library._remove_token_from_owner_enumeration.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_owner_enumeration.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721_enumerable.library._remove_token_from_owner_enumeration.SIZEOF_LOCALS": {
        "type": "const",
        "value": 6
      },
      "openzeppelin.token.erc721_enumerable.library.assert_not_equal": {
        "destination": "starkware.cairo.common.math.assert_not_equal",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.uint256_add": {
        "destination": "starkware.cairo.common.uint256.uint256_add",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.uint256_check": {
        "destination": "starkware.cairo.common.uint256.uint256_check",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.uint256_eq": {
        "destination": "starkware.cairo.common.uint256.uint256_eq",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.uint256_lt": {
        "destination": "starkware.cairo.common.uint256.uint256_lt",
        "type": "alias"
      },
      "openzeppelin.token.erc721_enumerable.library.uint256_sub": {
        "destination": "starkware.cairo.common.uint256.uint256_sub",
        "type": "alias"
      },
      "openzeppelin.utils.constants.FALSE": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.utils.constants.PREFIX_TRANSACTION": {
        "type": "const",
        "value": 476441609247967894954472788179128007176248455022
      },
      "openzeppelin.utils.constants.TRUE": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.utils.constants.UINT8_MAX": {
        "type": "const",
        "value": 256
      },
      "starkware.cairo.common.alloc.alloc": {
        "decorators": [],
        "pc": 0,
        "type": "function"
      },
      "starkware.cairo.common.alloc.alloc.Args": {
        "full_name": "starkware.cairo.common.alloc.alloc.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
        "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.Return": {
        "cairo_type": "(ptr : felt*)",
        "type": "type_definition"
      },
      "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.bitwise.ALL_ONES": {
        "type": "const",
        "value": -106710729501573572985208420194530329073740042555888586719234
      },
      "starkware.cairo.common.bitwise.BitwiseBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "x_and_y": {
            "cairo_type": "felt",
            "offset": 2
          },
          "x_or_y": {
            "cairo_type": "felt",
            "offset": 4
          },
          "x_xor_y": {
            "cairo_type": "felt",
            "offset": 3
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
        "members": {
          "m": {
            "cairo_type": "felt",
            "offset": 4
          },
          "p": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 0
          },
          "q": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 2
          },
          "r": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcPoint": {
        "destination": "starkware.cairo.common.ec_point.EcPoint",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.HashBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "members": {
          "result": {
            "cairo_type": "felt",
            "offset": 2
          },
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "members": {
          "message": {
            "cairo_type": "felt",
            "offset": 1
          },
          "pub_key": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.dict_access.DictAccess": {
        "full_name": "starkware.cairo.common.dict_access.DictAccess",
        "members": {
          "key": {
            "cairo_type": "felt",
            "offset": 0
          },
          "new_value": {
            "cairo_type": "felt",
            "offset": 2
          },
          "prev_value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.ec_point.EcPoint": {
        "full_name": "starkware.cairo.common.ec_point.EcPoint",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.hash.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.hash.hash2": {
        "decorators": [],
        "pc": 3,
        "type": "function"
      },
      "starkware.cairo.common.hash.hash2.Args": {
        "full_name": "starkware.cairo.common.hash.hash2.Args",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.ImplicitArgs": {
        "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
        "members": {
          "hash_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.Return": {
        "cairo_type": "(result : felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_250_bit": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 60,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_250_bit.Args": {
        "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
        "type": "const",
        "value": 5316911983139663491615228241121378304
      },
      "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_250_bit.SHIFT": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
        "type": "const",
        "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
      },
      "starkware.cairo.common.math.assert_250_bit.high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.high",
        "references": [
          {
            "ap_tracking_data": {
              "group": 9,
              "offset": 0
            },
            "pc": 60,
            "value": "[cast([fp + (-4)] + 1, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.low",
        "references": [
          {
            "ap_tracking_data": {
              "group": 9,
              "offset": 0
            },
            "pc": 60,
            "value": "[cast([fp + (-4)], felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 9,
              "offset": 0
            },
            "pc": 60,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le": {
        "decorators": [],
        "pc": 39,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_le.Args": {
        "full_name": "starkware.cairo.common.math.assert_le.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_le_felt": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 102,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_le_felt.Args": {
        "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le_felt.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 3
      },
      "starkware.cairo.common.math.assert_le_felt.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 0
            },
            "pc": 102,
            "value": "[cast(fp + (-4), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt.b": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 0
            },
            "pc": 102,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt.small_inputs": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.small_inputs",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 3
            },
            "pc": 104,
            "value": "[cast(fp, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_lt": {
        "decorators": [],
        "pc": 44,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_lt.Args": {
        "full_name": "starkware.cairo.common.math.assert_lt.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_lt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_lt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_lt.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_lt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_lt_felt": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 142,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_lt_felt.Args": {
        "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_lt_felt.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "starkware.cairo.common.math.assert_lt_felt.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 0
            },
            "pc": 142,
            "value": "[cast(fp + (-4), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_lt_felt.b": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 0
            },
            "pc": 142,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_nn": {
        "decorators": [],
        "pc": 35,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_nn.Args": {
        "full_name": "starkware.cairo.common.math.assert_nn.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_nn.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_nn.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 5,
              "offset": 0
            },
            "pc": 35,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_nn_le": {
        "decorators": [],
        "pc": 51,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_nn_le.Args": {
        "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn_le.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_not_equal": {
        "decorators": [],
        "pc": 29,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_not_equal.Args": {
        "full_name": "starkware.cairo.common.math.assert_not_equal.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_equal.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_not_equal.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_equal.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_not_equal.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_not_equal.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_equal.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 4,
              "offset": 0
            },
            "pc": 29,
            "value": "[cast(fp + (-4), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_not_equal.b": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_equal.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 4,
              "offset": 0
            },
            "pc": 29,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_not_zero": {
        "decorators": [],
        "pc": 24,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_not_zero.Args": {
        "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_not_zero.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_zero.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 3,
              "offset": 0
            },
            "pc": 24,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.split_felt": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 73,
        "type": "function"
      },
      "starkware.cairo.common.math.split_felt.Args": {
        "full_name": "starkware.cairo.common.math.split_felt.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.split_felt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.split_felt.MAX_HIGH": {
        "type": "const",
        "value": 10633823966279327296825105735305134080
      },
      "starkware.cairo.common.math.split_felt.MAX_LOW": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.split_felt.Return": {
        "cairo_type": "(high : felt, low : felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.split_felt.high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.split_felt.high",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 73,
            "value": "[cast([fp + (-4)] + 1, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.split_felt.low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.split_felt.low",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 73,
            "value": "[cast([fp + (-4)], felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.split_felt.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.split_felt.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 73,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math_cmp.RC_BOUND": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.math_cmp.assert_le_felt": {
        "destination": "starkware.cairo.common.math.assert_le_felt",
        "type": "alias"
      },
      "starkware.cairo.common.math_cmp.assert_lt_felt": {
        "destination": "starkware.cairo.common.math.assert_lt_felt",
        "type": "alias"
      },
      "starkware.cairo.common.math_cmp.is_le": {
        "decorators": [],
        "pc": 290,
        "type": "function"
      },
      "starkware.cairo.common.math_cmp.is_le.Args": {
        "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_le.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math_cmp.is_nn": {
        "decorators": [],
        "pc": 261,
        "type": "function"
      },
      "starkware.cairo.common.math_cmp.is_nn.Args": {
        "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_nn.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math_cmp.is_nn.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 20,
              "offset": 0
            },
            "pc": 261,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
        "pc": 281,
        "type": "label"
      },
      "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
        "pc": 269,
        "type": "label"
      },
      "starkware.cairo.common.memcpy.memcpy": {
        "decorators": [],
        "pc": 9,
        "type": "function"
      },
      "starkware.cairo.common.memcpy.memcpy.Args": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
        "members": {
          "dst": {
            "cairo_type": "felt*",
            "offset": 0
          },
          "len": {
            "cairo_type": "felt",
            "offset": 2
          },
          "src": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
        "members": {
          "dst": {
            "cairo_type": "felt*",
            "offset": 0
          },
          "src": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.memcpy.memcpy.continue_copying": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
        "references": [
          {
            "ap_tracking_data": {
              "group": 2,
              "offset": 3
            },
            "pc": 16,
            "value": "[cast(ap, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy.len": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.memcpy.memcpy.len",
        "references": [
          {
            "ap_tracking_data": {
              "group": 2,
              "offset": 0
            },
            "pc": 9,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy.loop": {
        "pc": 14,
        "type": "label"
      },
      "starkware.cairo.common.pow.assert_le": {
        "destination": "starkware.cairo.common.math.assert_le",
        "type": "alias"
      },
      "starkware.cairo.common.pow.get_ap": {
        "destination": "starkware.cairo.common.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.pow.get_fp_and_pc": {
        "destination": "starkware.cairo.common.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.registers.get_ap": {
        "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.registers.get_fp_and_pc": {
        "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.ALL_ONES": {
        "type": "const",
        "value": 340282366920938463463374607431768211455
      },
      "starkware.cairo.common.uint256.BitwiseBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.HALF_SHIFT": {
        "type": "const",
        "value": 18446744073709551616
      },
      "starkware.cairo.common.uint256.SHIFT": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.uint256.Uint256": {
        "full_name": "starkware.cairo.common.uint256.Uint256",
        "members": {
          "high": {
            "cairo_type": "felt",
            "offset": 1
          },
          "low": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.assert_in_range": {
        "destination": "starkware.cairo.common.math.assert_in_range",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_le": {
        "destination": "starkware.cairo.common.math.assert_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_nn_le": {
        "destination": "starkware.cairo.common.math.assert_nn_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_and": {
        "destination": "starkware.cairo.common.bitwise.bitwise_and",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_or": {
        "destination": "starkware.cairo.common.bitwise.bitwise_or",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_xor": {
        "destination": "starkware.cairo.common.bitwise.bitwise_xor",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.get_ap": {
        "destination": "starkware.cairo.common.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.get_fp_and_pc": {
        "destination": "starkware.cairo.common.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.is_le": {
        "destination": "starkware.cairo.common.math_cmp.is_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.pow": {
        "destination": "starkware.cairo.common.pow.pow",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.uint256_add": {
        "decorators": [],
        "pc": 300,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_add.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_add.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_add.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_add.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_add.Return": {
        "cairo_type": "(res : starkware.cairo.common.uint256.Uint256, carry : felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_add.SIZEOF_LOCALS": {
        "type": "const",
        "value": 4
      },
      "starkware.cairo.common.uint256.uint256_add.a": {
        "cairo_type": "starkware.cairo.common.uint256.Uint256",
        "full_name": "starkware.cairo.common.uint256.uint256_add.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 24,
              "offset": 0
            },
            "pc": 300,
            "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.b": {
        "cairo_type": "starkware.cairo.common.uint256.Uint256",
        "full_name": "starkware.cairo.common.uint256.uint256_add.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 24,
              "offset": 0
            },
            "pc": 300,
            "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.carry_high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.uint256.uint256_add.carry_high",
        "references": [
          {
            "ap_tracking_data": {
              "group": 24,
              "offset": 4
            },
            "pc": 302,
            "value": "[cast(fp + 3, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.carry_low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.uint256.uint256_add.carry_low",
        "references": [
          {
            "ap_tracking_data": {
              "group": 24,
              "offset": 4
            },
            "pc": 302,
            "value": "[cast(fp + 2, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_check": {
        "decorators": [],
        "pc": 295,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_check.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_check.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_check.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_check.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_check.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_check.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_eq": {
        "decorators": [],
        "pc": 390,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_eq.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_eq.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_eq.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_eq.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_eq.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_eq.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_le": {
        "decorators": [],
        "pc": 339,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_le.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_le.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_le.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_lt": {
        "decorators": [],
        "pc": 322,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_lt.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_lt.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_lt.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_lt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_neg": {
        "decorators": [],
        "pc": 359,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_neg.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_neg.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_neg.Return": {
        "cairo_type": "(res : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_neg.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_not": {
        "decorators": [],
        "pc": 351,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_not.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_not.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_not.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_not.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_not.Return": {
        "cairo_type": "(res : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_not.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_sub": {
        "decorators": [],
        "pc": 374,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_sub.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_sub.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_sub.Return": {
        "cairo_type": "(res : starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_sub.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.storage.ADDR_BOUND": {
        "type": "const",
        "value": -106710729501573572985208420194530329073740042555888586719489
      },
      "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
        "type": "const",
        "value": 256
      },
      "starkware.starknet.common.storage.assert_250_bit": {
        "destination": "starkware.cairo.common.math.assert_250_bit",
        "type": "alias"
      },
      "starkware.starknet.common.storage.normalize_address": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 169,
        "type": "function"
      },
      "starkware.starknet.common.storage.normalize_address.Args": {
        "full_name": "starkware.starknet.common.storage.normalize_address.Args",
        "members": {
          "addr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.Return": {
        "cairo_type": "(res : felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.storage.normalize_address.addr": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.addr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 0
            },
            "pc": 169,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_250": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 2
            },
            "pc": 189,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_small": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 1
            },
            "pc": 171,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
        "type": "const",
        "value": 20853273475220472486191784820
      },
      "starkware.starknet.common.syscalls.CallContract": {
        "full_name": "starkware.starknet.common.syscalls.CallContract",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractRequest": {
        "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractResponse": {
        "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
        "members": {
          "retdata": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "retdata_size": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
        "type": "const",
        "value": 21167594061783206823196716140
      },
      "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
        "type": "const",
        "value": 23274015802972845247556842986379118667122
      },
      "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
        "type": "const",
        "value": 75202468540281
      },
      "starkware.starknet.common.syscalls.Deploy": {
        "full_name": "starkware.starknet.common.syscalls.Deploy",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
            "offset": 6
          }
        },
        "size": 9,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployRequest": {
        "full_name": "starkware.starknet.common.syscalls.DeployRequest",
        "members": {
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "constructor_calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "constructor_calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "contract_address_salt": {
            "cairo_type": "felt",
            "offset": 2
          },
          "reserved": {
            "cairo_type": "felt",
            "offset": 5
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 6,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployResponse": {
        "full_name": "starkware.starknet.common.syscalls.DeployResponse",
        "members": {
          "constructor_retdata": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "constructor_retdata_size": {
            "cairo_type": "felt",
            "offset": 1
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DictAccess": {
        "destination": "starkware.cairo.common.dict_access.DictAccess",
        "type": "alias"
      },
      "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
        "type": "const",
        "value": 1280709301550335749748
      },
      "starkware.starknet.common.syscalls.EmitEvent": {
        "full_name": "starkware.starknet.common.syscalls.EmitEvent",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 3
          },
          "keys": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "keys_len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
        "type": "const",
        "value": 1448089106835523001438702345020786
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
        "type": "const",
        "value": 24294903732626645868215235778792757751152
      },
      "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 94901967781393078444254803017658102643
      },
      "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 6219495360805491471215297013070624192820083
      },
      "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 1592190833581991703053805829594610833820054387
      },
      "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
        "type": "const",
        "value": 1317029390204112103023
      },
      "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
        "type": "const",
        "value": 1448089128652340074717162277007973
      },
      "starkware.starknet.common.syscalls.GetBlockNumber": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
        "members": {
          "block_number": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestamp": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
        "members": {
          "block_timestamp": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
        "members": {
          "caller_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
        "members": {
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
        "members": {
          "sequencer_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfo": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
        "members": {
          "tx_info": {
            "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignature": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
        "members": {
          "signature": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "signature_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
        "type": "const",
        "value": 436233452754198157705746250789557519228244616562
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
        "type": "const",
        "value": 92376026794327011772951660
      },
      "starkware.starknet.common.syscalls.LibraryCall": {
        "full_name": "starkware.starknet.common.syscalls.LibraryCall",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LibraryCallRequest": {
        "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
        "type": "const",
        "value": 433017908768303439907196859243777073
      },
      "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
        "type": "const",
        "value": 100890693370601760042082660
      },
      "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
        "type": "const",
        "value": 25828017502874050592466629733
      },
      "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
        "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
        "members": {
          "payload_ptr": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "payload_size": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to_address": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageRead": {
        "full_name": "starkware.starknet.common.syscalls.StorageRead",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadRequest": {
        "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadResponse": {
        "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageWrite": {
        "full_name": "starkware.starknet.common.syscalls.StorageWrite",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.TxInfo": {
        "full_name": "starkware.starknet.common.syscalls.TxInfo",
        "members": {
          "account_contract_address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "chain_id": {
            "cairo_type": "felt",
            "offset": 6
          },
          "max_fee": {
            "cairo_type": "felt",
            "offset": 2
          },
          "signature": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "signature_len": {
            "cairo_type": "felt",
            "offset": 3
          },
          "transaction_hash": {
            "cairo_type": "felt",
            "offset": 5
          },
          "version": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract": {
        "decorators": [],
        "pc": 209,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.call_contract.Args": {
        "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 2
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract.Return": {
        "cairo_type": "(retdata_size : felt, retdata : felt*)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 14,
              "offset": 0
            },
            "pc": 209,
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 14,
              "offset": 1
            },
            "pc": 216,
            "value": "cast([fp + (-7)] + 7, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.emit_event": {
        "decorators": [],
        "pc": 251,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.emit_event.Args": {
        "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 2
          },
          "keys": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "keys_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 19,
              "offset": 0
            },
            "pc": 251,
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 19,
              "offset": 1
            },
            "pc": 258,
            "value": "cast([fp + (-7)] + 5, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_caller_address": {
        "decorators": [],
        "pc": 221,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Args": {
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Return": {
        "cairo_type": "(caller_address : felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 15,
              "offset": 0
            },
            "pc": 221,
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 15,
              "offset": 1
            },
            "pc": 224,
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_contract_address": {
        "decorators": [],
        "pc": 228,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_contract_address.Args": {
        "full_name": "starkware.starknet.common.syscalls.get_contract_address.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_contract_address.Return": {
        "cairo_type": "(contract_address : felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_contract_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 0
            },
            "pc": 228,
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 1
            },
            "pc": 231,
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_read": {
        "decorators": [],
        "pc": 235,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_read.Args": {
        "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.Return": {
        "cairo_type": "(value : felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 17,
              "offset": 0
            },
            "pc": 235,
            "value": "[cast(fp + (-4), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 17,
              "offset": 1
            },
            "pc": 239,
            "value": "cast([fp + (-4)] + 3, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_write": {
        "decorators": [],
        "pc": 243,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_write.Args": {
        "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 18,
              "offset": 0
            },
            "pc": 243,
            "value": "[cast(fp + (-5), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 18,
              "offset": 1
            },
            "pc": 248,
            "value": "cast([fp + (-5)] + 3, felt*)"
          }
        ],
        "type": "reference"
      }
    },
    "main_scope": "__main__",
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
      "references": [
        {
          "ap_tracking_data": {
            "group": 2,
            "offset": 0
          },
          "pc": 9,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 2,
            "offset": 3
          },
          "pc": 16,
          "value": "[cast(ap, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 3,
            "offset": 0
          },
          "pc": 24,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 4,
            "offset": 0
          },
          "pc": 29,
          "value": "[cast(fp + (-4), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 4,
            "offset": 0
          },
          "pc": 29,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 5,
            "offset": 0
          },
          "pc": 35,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 9,
            "offset": 0
          },
          "pc": 60,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 9,
            "offset": 0
          },
          "pc": 60,
          "value": "[cast([fp + (-4)], felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 9,
            "offset": 0
          },
          "pc": 60,
          "value": "[cast([fp + (-4)] + 1, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 73,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 73,
          "value": "[cast([fp + (-4)], felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 73,
          "value": "[cast([fp + (-4)] + 1, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 0
          },
          "pc": 102,
          "value": "[cast(fp + (-4), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 0
          },
          "pc": 102,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 3
          },
          "pc": 104,
          "value": "[cast(fp, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 12,
            "offset": 0
          },
          "pc": 142,
          "value": "[cast(fp + (-4), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 12,
            "offset": 0
          },
          "pc": 142,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 0
          },
          "pc": 169,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 1
          },
          "pc": 171,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 2
          },
          "pc": 189,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 14,
            "offset": 0
          },
          "pc": 209,
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 15,
            "offset": 0
          },
          "pc": 221,
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 0
          },
          "pc": 228,
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 17,
            "offset": 0
          },
          "pc": 235,
          "value": "[cast(fp + (-4), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 18,
            "offset": 0
          },
          "pc": 243,
          "value": "[cast(fp + (-5), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 19,
            "offset": 0
          },
          "pc": 251,
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 20,
            "offset": 0
          },
          "pc": 261,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 24,
            "offset": 0
          },
          "pc": 300,
          "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
        },
        {
          "ap_tracking_data": {
            "group": 24,
            "offset": 0
          },
          "pc": 300,
          "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
        },
        {
          "ap_tracking_data": {
            "group": 24,
            "offset": 4
          },
          "pc": 302,
          "value": "[cast(fp + 2, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 24,
            "offset": 4
          },
          "pc": 302,
          "value": "[cast(fp + 3, felt*)]"
        }
      ]
    }
  }
}
